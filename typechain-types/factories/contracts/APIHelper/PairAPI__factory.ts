/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PairAPI,
  PairAPIInterface,
} from "../../../contracts/APIHelper/PairAPI";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "Owner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldVoter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newVoter",
        type: "address",
      },
    ],
    name: "Voter",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_EPOCHS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PAIRS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_REWARDS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WEEK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amounts",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offset",
        type: "uint256",
      },
    ],
    name: "getAllPair",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pair_address",
            type: "address",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "decimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "stable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "total_supply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "string",
            name: "token0_symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "token0_decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserve0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimable0",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "string",
            name: "token1_symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "token1_decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserve1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimable1",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "gauge",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gauge_total_supply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "fee",
            type: "address",
          },
          {
            internalType: "address",
            name: "bribe",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "emissions",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "emissions_token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "emissions_token_decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "account_lp_balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "account_token0_balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "account_token1_balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "account_gauge_balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "account_gauge_earned",
            type: "uint256",
          },
        ],
        internalType: "struct PairAPI.pairInfo[]",
        name: "Pairs",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pair_address",
            type: "address",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "decimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "stable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "total_supply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "string",
            name: "token0_symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "token0_decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserve0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimable0",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "string",
            name: "token1_symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "token1_decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserve1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimable1",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "gauge",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gauge_total_supply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "fee",
            type: "address",
          },
          {
            internalType: "address",
            name: "bribe",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "emissions",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "emissions_token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "emissions_token_decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "account_lp_balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "account_token0_balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "account_token1_balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "account_gauge_balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "account_gauge_earned",
            type: "uint256",
          },
        ],
        internalType: "struct PairAPI.pairInfo",
        name: "_pairInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amounts",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offset",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "getPairBribe",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "epochTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalVotes",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "pair",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
            ],
            internalType: "struct PairAPI.tokenBribe[]",
            name: "bribes",
            type: "tuple[]",
          },
        ],
        internalType: "struct PairAPI.pairBribeEpoch[]",
        name: "_pairEpoch",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "left",
    outputs: [
      {
        internalType: "uint256",
        name: "_rewPerEpoch",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pairFactory",
    outputs: [
      {
        internalType: "contract IPairFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "setVoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voter",
    outputs: [
      {
        internalType: "contract IVoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612810806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063996cf23311610097578063e14f870d11610066578063e14f870d146101fd578063e6a4390514610216578063f4359ce514610236578063fb5478b31461024057600080fd5b8063996cf233146101b9578063abcf3d6a146101c2578063c4d66de8146101e2578063c8b72f8f146101f557600080fd5b806346c96aac116100d357806346c96aac1461015f5780634bc2a657146101725780636180c3f9146101855780638da5cb5b146101a657600080fd5b806313af4035146100fa5780632495a5991461010f578063404cba501461013f575b600080fd5b61010d610108366004612126565b610248565b005b600254610122906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61015261014d366004612143565b61032f565b60405161013691906121cc565b600154610122906001600160a01b031681565b61010d610180366004612126565b6106d9565b6101986101933660046122d1565b61092a565b604051908152602001610136565b600354610122906001600160a01b031681565b6101986103e881565b6101d56101d036600461230a565b610afc565b6040516101369190612503565b61010d6101f0366004612126565b610cf0565b61019860c881565b600054610122906201000090046001600160a01b031681565b6102296102243660046122d1565b610f88565b6040516101369190612565565b61019862093a8081565b610198601081565b6003546001600160a01b031633146102935760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b6001600160a01b0381166102d45760405162461bcd60e51b81526020600482015260086024820152673d32b937a0b2323960c11b604482015260640161028a565b600380546001600160a01b0319166001600160a01b0383169081179091556040805133815260208101929092527fc53ee02035d465398c0648e0bca1462281006a266ec38c7192bce1c24e0b64a3910160405180910390a150565b606060c88411156103745760405162461bcd60e51b815260206004820152600f60248201526e746f6f206d616e792065706f63687360881b604482015260640161028a565b8367ffffffffffffffff81111561038d5761038d612578565b6040519080825280602002602001820160405280156103f257816020015b6103df6040518060800160405280600081526020016000815260200160006001600160a01b03168152602001606081525090565b8152602001906001900390816103ab5790505b5060015460405163b9a09fd560e01b81526001600160a01b0385811660048301529293506000929091169063b9a09fd590602401602060405180830381865afa158015610443573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610467919061258e565b60015460405163ae21c4cb60e01b81526001600160a01b0380841660048301529293506000929091169063ae21c4cb90602401602060405180830381865afa1580156104b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104db919061258e565b90506001600160a01b0381166000036104f55750506106d2565b6000816001600160a01b03166355288eea6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610535573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055991906125ab565b90508060000361056b575050506106d2565b6000865b61057989896125da565b8110156106cc57604051630981b24d60e41b8152600481018490526001600160a01b0385169063981b24d090602401602060405180830381865afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e991906125ab565b915082866105f78a846125ed565b8151811061060757610607612600565b602090810291909101015152868661061f8a846125ed565b8151811061062f5761062f612600565b60209081029190910101516001600160a01b0390911660409091015281866106578a846125ed565b8151811061066757610667612600565b602002602001015160200181815250506106818385610fa3565b8661068c8a846125ed565b8151811061069c5761069c612600565b6020908102919091010151606001526106b862093a80846125da565b9250806106c481612616565b91505061056f565b50505050505b9392505050565b6003546001600160a01b0316331461071f5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640161028a565b6001600160a01b0381166107605760405162461bcd60e51b81526020600482015260086024820152673d32b937a0b2323960c11b604482015260640161028a565b600180546001600160a01b038381166001600160a01b0319831681179093556040805163c45a015560e01b8152905191909216929163c45a01559160048083019260209291908290030181865afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e3919061258e565b6000805462010000600160b01b031916620100006001600160a01b039384160217905560015460408051638dd598fb60e01b815290519190921691638dd598fb9160048083019260209291908290030181865afa158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086c919061258e565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd919061258e565b600280546001600160a01b0319166001600160a01b0392831617905560408051838316815291841660208301527f710c23d7ab8af94af228e05f80f3472774722958ef63a866cdb227de1b2a8f2c91015b60405180910390a15050565b60015460405163b9a09fd560e01b81526001600160a01b038481166004830152600092839291169063b9a09fd590602401602060405180830381865afa158015610978573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099c919061258e565b600154604051637572079360e11b81526001600160a01b0380841660048301529293506000929091169063eae40f2690602401602060405180830381865afa1580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a10919061258e565b90506000816001600160a01b031663a4a3e0356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7691906125ab565b604051631c0ba43160e11b81526001600160a01b03878116600483015260248201839052919250600091841690633817486290604401606060405180830381865afa158015610ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aed919061262f565b60200151979650505050505050565b60606103e8831115610b405760405162461bcd60e51b815260206004820152600d60248201526c3a37b79036b0b73c903830b4b960991b604482015260640161028a565b8267ffffffffffffffff811115610b5957610b59612578565b604051908082528060200260200182016040528015610b9257816020015b610b7f611ff5565b815260200190600190039081610b775790505b509050600082905060008060029054906101000a90046001600160a01b03166001600160a01b031663574f2ba36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1291906125ab565b905060005b610c2186866125da565b831015610ce657828214610ce657600054604051631e3dd18b60e01b815260048101859052620100009091046001600160a01b031690631e3dd18b90602401602060405180830381865afa158015610c7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca1919061258e565b9050610cad8188611478565b84610cb887866125ed565b81518110610cc857610cc8612600565b60200260200101819052508280610cde90612616565b935050610c17565b5050509392505050565b600054610100900460ff1615808015610d105750600054600160ff909116105b80610d2a5750303b158015610d2a575060005460ff166001145b610d8d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161028a565b6000805460ff191660011790558015610db0576000805461ff0019166101001790555b600380546001600160a01b03199081163317909155600180546001600160a01b0385169216821790556040805163c45a015560e01b8152905163c45a0155916004808201926020929091908290030181865afa158015610e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e38919061258e565b6000805462010000600160b01b031916620100006001600160a01b039384160217905560015460408051638dd598fb60e01b815290519190921691638dd598fb9160048083019260209291908290030181865afa158015610e9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec1919061258e565b6001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610efe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f22919061258e565b600280546001600160a01b0319166001600160a01b03929092169190911790558015610f84576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200161091e565b5050565b610f90611ff5565b610f9a8383611478565b90505b92915050565b606060008290506000816001600160a01b031663e68863966040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100e91906125ab565b90508067ffffffffffffffff81111561102957611029612578565b60405190808252806020026020018201604052801561107a57816020015b60408051608081018252600080825260208083018290529282015260608082015282526000199092019101816110475790505b509250600080805b8383101561146d57604051637bb7bed160e01b8152600481018490526001600160a01b03861690637bb7bed190602401602060405180830381865afa1580156110cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f3919061258e565b604051631c0ba43160e11b81526001600160a01b038083166004830152602482018b9052919250600091871690633817486290604401606060405180830381865afa158015611146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116a919061262f565b60208101519350905082156112eb578187858151811061118c5761118c612600565b6020026020010151600001906001600160a01b031690816001600160a01b031681525050816001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156111ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611216919081019061268b565b87858151811061122857611228612600565b602002602001015160600181905250816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112999190612738565b8785815181106112ab576112ab612600565b60200260200101516020019060ff16908160ff1681525050828785815181106112d6576112d6612600565b6020026020010151604001818152505061145a565b818785815181106112fe576112fe612600565b6020026020010151600001906001600160a01b031690816001600160a01b031681525050816001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611360573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611388919081019061268b565b87858151811061139a5761139a612600565b602002602001015160600181905250816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140b9190612738565b87858151811061141d5761141d612600565b60200260200101516020019060ff16908160ff1681525050600087858151811061144957611449612600565b602002602001015160400181815250505b508261146581612616565b935050611082565b505050505092915050565b611480611ff5565b6000839050600080600080846001600160a01b0316639d63848a6040518163ffffffff1660e01b81526004016040805180830381865afa1580156114c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ec919061275b565b8094508195505050846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611532573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611556919061278a565b5060015460405163b9a09fd560e01b81526001600160a01b038c81166004830152939550919350600092169063b9a09fd590602401602060405180830381865afa1580156115a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cc919061258e565b905060008080806001600160a01b038516156117a0576001600160a01b038c16156116ce576040516370a0823160e01b81526001600160a01b038d811660048301528616906370a0823190602401602060405180830381865afa158015611637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165b91906125ab565b6040516246613160e11b81526001600160a01b038e8116600483015291955090861690628cc26290602401602060405180830381865afa1580156116a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c791906125ab565b92506116d7565b60009350600092505b846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611715573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173991906125ab565b9150846001600160a01b0316637b0a47ee6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179d91906125ab565b90505b6001600160a01b03808e168c52604080516395d89b4160e01b81529051918c16916395d89b41916004808201926000929091908290030181865afa1580156117ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611814919081019061268b565b8b60200181905250896001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801561185a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611882919081019061268b565b8b60400181905250896001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ec9190612738565b60ff168b6060018181525050896001600160a01b03166322be3de16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195a91906127b8565b151560808c0152604080516318160ddd60e01b815290516001600160a01b038c16916318160ddd9160048083019260209291908290030181865afa1580156119a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ca91906125ab565b60a08c01526001600160a01b03891660c08c018190526040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015611a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3f9190612738565b60ff168b610100018181525050886001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611a8a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ab2919081019061268b565b60e08c01526101208b018790526040516326ad4fc560e11b81526001600160a01b038d811660048301528b1690634d5a9f8a90602401602060405180830381865afa158015611b05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2991906125ab565b6101408c01526001600160a01b0388166101608c018190526040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015611b7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba09190612738565b60ff168b6101a0018181525050876001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015611beb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c13919081019061268b565b6101808c01526101c08b0186905260405163a1ac4d1360e01b81526001600160a01b038d811660048301528b169063a1ac4d1390602401602060405180830381865afa158015611c67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c8b91906125ab565b6101e08c01526001600160a01b038086166102008d01526102208c018390526001546040516353e5642360e11b81528f8316600482015291169063a7cac84690602401602060405180830381865afa158015611ceb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0f91906125ab565b6102808c01526102a08b018190526002546001600160a01b03166102c08c018190526040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015611d6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d909190612738565b60ff166102e08c0152600154604051637572079360e11b81526001600160a01b0387811660048301529091169063eae40f2690602401602060405180830381865afa158015611de3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e07919061258e565b6001600160a01b039081166102408d015260015460405163ae21c4cb60e01b8152878316600482015291169063ae21c4cb90602401602060405180830381865afa158015611e59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7d919061258e565b6001600160a01b039081166102608d01526040516370a0823160e01b81528d82166004820152908e16906370a0823190602401602060405180830381865afa158015611ecd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef191906125ab565b6103008c01526040516370a0823160e01b81526001600160a01b038d811660048301528a16906370a0823190602401602060405180830381865afa158015611f3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6191906125ab565b6103208c01526040516370a0823160e01b81526001600160a01b038d811660048301528916906370a0823190602401602060405180830381865afa158015611fad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd191906125ab565b6103408c015250506103608901919091526103808801525094979650505050505050565b604051806103a0016040528060006001600160a01b031681526020016060815260200160608152602001600081526020016000151581526020016000815260200160006001600160a01b031681526020016060815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016060815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b038116811461212357600080fd5b50565b60006020828403121561213857600080fd5b81356106d28161210e565b60008060006060848603121561215857600080fd5b833592506020840135915060408401356121718161210e565b809150509250925092565b60005b8381101561219757818101518382015260200161217f565b50506000910152565b600081518084526121b881602086016020860161217c565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156122c357603f198984030185528151805184528781015188850152868101516001600160a01b039081168886015260609182015160808387018190528151908701819052908a019260a0600583901b880181019391929088019060005b818110156122aa57898603609f1901835286518051851687528e81015160ff168f8801528d8101518e8801528501516080868801819052612297908801826121a0565b978f0197965050918d0191600101612254565b505050978a0197509094505050908601906001016121f3565b509098975050505050505050565b600080604083850312156122e457600080fd5b82356122ef8161210e565b915060208301356122ff8161210e565b809150509250929050565b60008060006060848603121561231f57600080fd5b833561232a8161210e565b95602085013595506040909401359392505050565b80516001600160a01b0316825260006103a06020830151816020860152612368828601826121a0565b9150506040830151848203604086015261238282826121a0565b9150506060830151606085015260808301516123a2608086018215159052565b5060a083015160a085015260c08301516123c760c08601826001600160a01b03169052565b5060e083015184820360e08601526123df82826121a0565b610100858101519087015261012080860151908701526101408086015190870152610160808601516001600160a01b0316908701526101808086015187830382890152919350915061243183826121a0565b6101a086810151908801526101c080870151908801526101e08087015190880152610200808701516001600160a01b03908116918901919091526102208088015190890152610240808801518216908901526102608088015182169089015261028080880151908901526102a080880151908901526102c080880151909116908801526102e08087015190880152610300808701519088015261032080870151908801526103408087015190880152610360808701519088015261038095860151959096019490945250929392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561255857603f1988860301845261254685835161233f565b9450928501929085019060010161252a565b5092979650505050505050565b602081526000610f9a602083018461233f565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156125a057600080fd5b81516106d28161210e565b6000602082840312156125bd57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610f9d57610f9d6125c4565b81810381811115610f9d57610f9d6125c4565b634e487b7160e01b600052603260045260246000fd5b600060018201612628576126286125c4565b5060010190565b60006060828403121561264157600080fd5b6040516060810181811067ffffffffffffffff8211171561266457612664612578565b80604052508251815260208301516020820152604083015160408201528091505092915050565b60006020828403121561269d57600080fd5b815167ffffffffffffffff808211156126b557600080fd5b818401915084601f8301126126c957600080fd5b8151818111156126db576126db612578565b604051601f8201601f19908116603f0116810190838211818310171561270357612703612578565b8160405282815287602084870101111561271c57600080fd5b61272d83602083016020880161217c565b979650505050505050565b60006020828403121561274a57600080fd5b815160ff811681146106d257600080fd5b6000806040838503121561276e57600080fd5b82516127798161210e565b60208401519092506122ff8161210e565b60008060006060848603121561279f57600080fd5b8351925060208401519150604084015190509250925092565b6000602082840312156127ca57600080fd5b815180151581146106d257600080fdfea26469706673582212200fdc1e368c83afb7981a8de198cbf36b5c51fbda6663806133b9f06bfc51ea4464736f6c63430008150033";

type PairAPIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PairAPIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PairAPI__factory extends ContractFactory {
  constructor(...args: PairAPIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PairAPI> {
    return super.deploy(overrides || {}) as Promise<PairAPI>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PairAPI {
    return super.attach(address) as PairAPI;
  }
  override connect(signer: Signer): PairAPI__factory {
    return super.connect(signer) as PairAPI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PairAPIInterface {
    return new utils.Interface(_abi) as PairAPIInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PairAPI {
    return new Contract(address, _abi, signerOrProvider) as PairAPI;
  }
}
