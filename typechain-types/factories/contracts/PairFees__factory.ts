/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PairFees, PairFeesInterface } from "../../contracts/PairFees";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "claimFeesFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "notifyFeeAmounts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161046638038061046683398101604081905261002f91610066565b336080526001600160a01b0391821660a0521660c052610099565b80516001600160a01b038116811461006157600080fd5b919050565b6000806040838503121561007957600080fd5b6100828361004a565b91506100906020840161004a565b90509250929050565b60805160a05160c0516103996100cd600039600061015f0152600061011c015260008181606e015260d701526103996000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630ab6d7251461003b578063533cf5ce14610050575b600080fd5b61004e610049366004610281565b610063565b005b61004e61005e3660046102a3565b6100cc565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461009857600080fd5b81156100b057816000546100ac91906102e4565b6000555b80156100c857806001546100c491906102e4565b6001555b5050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461010157600080fd5b811561014457600054828110610142578281036000556101427f0000000000000000000000000000000000000000000000000000000000000000858561018c565b505b801561018757600154818110610185578181036001556101857f0000000000000000000000000000000000000000000000000000000000000000858461018c565b505b505050565b801561018757826001600160a01b03163b6000036101a957600080fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610205919061030b565b6000604051808303816000865af19150503d8060008114610242576040519150601f19603f3d011682016040523d82523d6000602084013e610247565b606091505b5091509150818015610271575080511580610271575080806020019051810190610271919061033a565b61027a57600080fd5b5050505050565b6000806040838503121561029457600080fd5b50508035926020909101359150565b6000806000606084860312156102b857600080fd5b83356001600160a01b03811681146102cf57600080fd5b95602085013595506040909401359392505050565b8082018082111561030557634e487b7160e01b600052601160045260246000fd5b92915050565b6000825160005b8181101561032c5760208186018101518583015201610312565b506000920191825250919050565b60006020828403121561034c57600080fd5b8151801515811461035c57600080fd5b939250505056fea2646970667358221220d33be224894f73b3b23b10ccd26428b349f89da00fa40e423ce3fb4b57e86f5464736f6c63430008150033";

type PairFeesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PairFeesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PairFees__factory extends ContractFactory {
  constructor(...args: PairFeesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token0: PromiseOrValue<string>,
    _token1: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PairFees> {
    return super.deploy(_token0, _token1, overrides || {}) as Promise<PairFees>;
  }
  override getDeployTransaction(
    _token0: PromiseOrValue<string>,
    _token1: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token0, _token1, overrides || {});
  }
  override attach(address: string): PairFees {
    return super.attach(address) as PairFees;
  }
  override connect(signer: Signer): PairFees__factory {
    return super.connect(signer) as PairFees__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PairFeesInterface {
    return new utils.Interface(_abi) as PairFeesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PairFees {
    return new Contract(address, _abi, signerOrProvider) as PairFees;
  }
}
