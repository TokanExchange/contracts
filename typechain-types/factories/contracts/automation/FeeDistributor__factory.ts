/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FeeDistributor,
  FeeDistributorInterface,
} from "../../../contracts/automation/FeeDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pairFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "acceptGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "batchSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checker",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "intervalOffset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pairFactory",
    outputs: [
      {
        internalType: "contract IPairFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingGovernor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_batchSize",
        type: "uint256",
      },
    ],
    name: "setBatchSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pendingGov",
        type: "address",
      },
    ],
    name: "setGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_interval",
        type: "uint256",
      },
    ],
    name: "setInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_offset",
        type: "uint256",
      },
    ],
    name: "setIntervalOffset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pairFactory",
        type: "address",
      },
    ],
    name: "setPairFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "setVoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "voter",
    outputs: [
      {
        internalType: "contract IVoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e5f380380610e5f83398101604081905261002f9161009c565b600580546001600160a01b03199081166001600160a01b0393841617909155600080548216948316949094179093556001805490931691161790556014600255610e106003556102586004556100df565b80516001600160a01b038116811461009757600080fd5b919050565b6000806000606084860312156100b157600080fd5b6100ba84610080565b92506100c860208501610080565b91506100d660408501610080565b90509250925092565b610d71806100ee6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063947a36fb11610097578063e3056a3411610066578063e3056a3414610205578063e4fc6b6d14610218578063e58bb63914610220578063f4daaba11461022857600080fd5b8063947a36fb146101c0578063c42cf535146101c9578063cf5303cf146101dc578063e14f870d146101f257600080fd5b806346c96aac116100d357806346c96aac146101745780634bc2a65714610187578063576f35e31461019a5780637964bac9146101ad57600080fd5b80630b6a84ed146101055780630c340a241461012157806322a900821461014c578063419c7df014610161575b600080fd5b61010e60045481565b6040519081526020015b60405180910390f35b600554610134906001600160a01b031681565b6040516001600160a01b039091168152602001610118565b61015f61015a366004610b08565b610231565b005b61015f61016f366004610b08565b6102a5565b600154610134906001600160a01b031681565b61015f610195366004610b39565b61031e565b61015f6101a8366004610b08565b61036a565b61015f6101bb366004610b39565b6103d6565b61010e60035481565b61015f6101d7366004610b39565b610422565b6101e461045b565b604051610118929190610b81565b600054610134906001600160a01b031681565b600654610134906001600160a01b031681565b61015f61051f565b61015f6106f4565b61010e60025481565b6005546001600160a01b0316331461024857600080fd5b610e10811015801561025c5750610e108111155b6102a05760405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a59081a5b9d195c9d985b60821b60448201526064015b60405180910390fd5b600355565b6005546001600160a01b031633146102bc57600080fd5b6000811180156102cd575060035481105b6103195760405162461bcd60e51b815260206004820152601760248201527f696e76616c696420696e74657276616c206f66667365740000000000000000006044820152606401610297565b600455565b6005546001600160a01b0316331461033557600080fd5b6001600160a01b03811661034857600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b0316331461038157600080fd5b806000036103d15760405162461bcd60e51b815260206004820152601760248201527f62617463682073697a652063616e206e6f7420626520300000000000000000006044820152606401610297565b600255565b6005546001600160a01b031633146103ed57600080fd5b6001600160a01b03811661040057600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b0316331461043957600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60085460ff166060816104cd57600354600090806104798142610bd3565b6104839190610bf5565b61048d9190610c12565b905060006004548261049f9190610c25565b905080421180156104b1575080600754105b935083156104ca5760006104c361072f565b5115159450505b50505b811561050157506040805160048152602481019091526020810180516001600160e01b031663e4fc6b6d60e01b1790529091565b50604080518082019091526002815261060f60f31b60208201529091565b60085460ff1661055b5761053161072f565b805161054591600991602090910190610a8e565b506009546008805460ff19169115159190911790555b60085460ff16156106f25760095460025481111561057857506002545b60008167ffffffffffffffff81111561059357610593610c38565b6040519080825280602002602001820160405280156105bc578160200160208202803683370190505b5090505b81156106755760098054600019909301926105dd90600190610c25565b815481106105ed576105ed610c4e565b9060005260206000200160009054906101000a90046001600160a01b031681838151811061061d5761061d610c4e565b60200260200101906001600160a01b031690816001600160a01b031681525050600980548061064e5761064e610c64565b600082815260209020810160001990810180546001600160a01b03191690550190556105c0565b60015460405163c527ee1f60e01b81526001600160a01b039091169063c527ee1f906106a5908490600401610c7a565b600060405180830381600087803b1580156106bf57600080fd5b505af11580156106d3573d6000803e3d6000fd5b50506009546008805460ff191691151591909117905550504260075550505b565b6006546001600160a01b0316331461070b57600080fd5b600654600580546001600160a01b0319166001600160a01b03909216919091179055565b600080546040805163574f2ba360e01b81529051606093926001600160a01b03169163574f2ba39160048083019260209291908290030181865afa15801561077b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079f9190610cc7565b905060008167ffffffffffffffff8111156107bc576107bc610c38565b6040519080825280602002602001820160405280156107e5578160200160208202803683370190505b5090506000805b838110156109ea5760008054604051631e3dd18b60e01b8152600481018490526001600160a01b0390911690631e3dd18b90602401602060405180830381865afa15801561083e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108629190610ce0565b60015460405163b9a09fd560e01b81526001600160a01b0380841660048301529293506000929091169063b9a09fd590602401602060405180830381865afa1580156108b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d69190610ce0565b90506001600160a01b038116156109e0576001546040516001600160a01b038381166024830152600092839291169060440160408051601f198184030181529181526020820180516001600160e01b0316631703e5f960e01b1790525161093d9190610cfd565b600060405180830381855afa9150503d8060008114610978576040519150601f19603f3d011682016040523d82523d6000602084013e61097d565b606091505b509150915081801561099e57508080602001905181019061099e9190610d19565b156109dd57828787815181106109b6576109b6610c4e565b60200260200101906001600160a01b031690816001600160a01b0316815250508560010195505b50505b50506001016107ec565b508067ffffffffffffffff811115610a0457610a04610c38565b604051908082528060200260200182016040528015610a2d578160200160208202803683370190505b50935060005b81811015610a8757828181518110610a4d57610a4d610c4e565b6020026020010151858281518110610a6757610a67610c4e565b6001600160a01b0390921660209283029190910190910152600101610a33565b5050505090565b828054828255906000526020600020908101928215610ae3579160200282015b82811115610ae357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610aae565b50610aef929150610af3565b5090565b5b80821115610aef5760008155600101610af4565b600060208284031215610b1a57600080fd5b5035919050565b6001600160a01b0381168114610b3657600080fd5b50565b600060208284031215610b4b57600080fd5b8135610b5681610b21565b9392505050565b60005b83811015610b78578181015183820152602001610b60565b50506000910152565b82151581526040602082015260008251806040840152610ba8816060850160208701610b5d565b601f01601f1916919091016060019392505050565b634e487b7160e01b600052601160045260246000fd5b600082610bf057634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610c0c57610c0c610bbd565b92915050565b80820180821115610c0c57610c0c610bbd565b81810381811115610c0c57610c0c610bbd565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6020808252825182820181905260009190848201906040850190845b81811015610cbb5783516001600160a01b031683529284019291840191600101610c96565b50909695505050505050565b600060208284031215610cd957600080fd5b5051919050565b600060208284031215610cf257600080fd5b8151610b5681610b21565b60008251610d0f818460208701610b5d565b9190910192915050565b600060208284031215610d2b57600080fd5b81518015158114610b5657600080fdfea26469706673582212203ca8625f8698262bd0dc0afff38d1900e8424f44a8088ec30ee61ef97e88beac64736f6c63430008150033";

type FeeDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeDistributor__factory extends ContractFactory {
  constructor(...args: FeeDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pairFactory: PromiseOrValue<string>,
    _voter: PromiseOrValue<string>,
    _gov: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeDistributor> {
    return super.deploy(
      _pairFactory,
      _voter,
      _gov,
      overrides || {}
    ) as Promise<FeeDistributor>;
  }
  override getDeployTransaction(
    _pairFactory: PromiseOrValue<string>,
    _voter: PromiseOrValue<string>,
    _gov: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _pairFactory,
      _voter,
      _gov,
      overrides || {}
    );
  }
  override attach(address: string): FeeDistributor {
    return super.attach(address) as FeeDistributor;
  }
  override connect(signer: Signer): FeeDistributor__factory {
    return super.connect(signer) as FeeDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeDistributorInterface {
    return new utils.Interface(_abi) as FeeDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeDistributor {
    return new Contract(address, _abi, signerOrProvider) as FeeDistributor;
  }
}
