/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RewardDistributorV2,
  RewardDistributorV2Interface,
} from "../../../contracts/RewardDistributorv2.sol/RewardDistributorV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_voting_escrow",
        type: "address",
      },
      {
        internalType: "address",
        name: "_depositor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "CheckpointToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claim_epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "max_epoch",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "_lockAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "_unlockAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpoint_token",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpoint_total_supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "claim_many",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "what",
        type: "bool",
      },
    ],
    name: "increaseOrRemoveAllowances",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "last_token_time",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "last_week",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lockAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositor",
        type: "address",
      },
    ],
    name: "setDepositor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "start_time",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "time_cursor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "time_cursor_of",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token_claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens_per_week",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "total_distributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ve_supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voting_escrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a3138038062001a318339810160408190526200003491620001d7565b60016000908155610e106200004a81426200020f565b62000056919062000232565b905080600281905550806006819055506000836001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000cd91906200025e565b66071afd498d000980546001600160a01b038381166001600160a01b0319928316811790935566071afd498d00088054898316908416811790915566071afd498d000a805492891692841692909217909155600186905566071afd498d00078054909216331790915560405163095ea7b360e01b8152600481019190915260001960248201529192509063095ea7b3906044016020604051808303816000875af115801562000180573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001a6919062000283565b620001b057600080fd5b50505050620002a7565b80516001600160a01b0381168114620001d257600080fd5b919050565b60008060408385031215620001eb57600080fd5b620001f683620001ba565b91506200020660208401620001ba565b90509250929050565b6000826200022d57634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176200025857634e487b7160e01b600052601160045260246000fd5b92915050565b6000602082840312156200027157600080fd5b6200027c82620001ba565b9392505050565b6000602082840312156200029657600080fd5b815180151581146200027c57600080fd5b61177a80620002b76000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063b80777ea116100de578063de42fa1e11610097578063edf5999711610071578063edf5999714610350578063f2c098b714610363578063f4f3b20014610376578063fc0c546a1461038957600080fd5b8063de42fa1e1461031b578063dfe050311461032e578063e8b8b73f1461034757600080fd5b8063b80777ea146102b8578063c7c4ff46146102c0578063ce2639a7146102d9578063d1d58b25146102e2578063d4dafba8146102f5578063dcbbab4f1461030857600080fd5b8063486d25fe1161014b578063811a40fe11610125578063811a40fe1461026e578063834ee417146102765780638da5cb5b1461027f578063b21ed502146102b057600080fd5b8063486d25fe1461022c578063616174ce146102525780637f58e8f81461026557600080fd5b8063127dcbd31461019357806313af4035146101af5780631f1db043146101c457806321f1e89d146101e757806334a90d02146101f0578063379607f514610219575b600080fd5b61019c60065481565b6040519081526020015b60405180910390f35b6101c26101bd3660046113a8565b6103a2565b005b6101d76101d236600461140c565b6103e7565b60405190151581526020016101a6565b61019c60055481565b6101d76101fe3660046113a8565b66071afd498d000c6020526000908152604090205460ff1681565b61019c6102273660046114b2565b610455565b61019c61023a3660046114b2565b66071afd498d000b6020526000908152604090205481565b6101c26102603660046113a8565b610474565b61019c60025481565b6101c26104cb565b61019c60015481565b66071afd498d000754610298906001600160a01b031681565b6040516001600160a01b0390911681526020016101a6565b6101c2610510565b61019c610553565b66071afd498d000a54610298906001600160a01b031681565b61019c60035481565b61019c6102f03660046114b2565b610571565b61019c6103033660046114b2565b6105e8565b6101c26103163660046114d9565b61060b565b6101c26103293660046113a8565b61071d565b66071afd498d000854610298906001600160a01b031681565b61019c60045481565b61019c61035e3660046114b2565b610777565b6101c26103713660046113a8565b61078d565b6101c26103843660046113a8565b6107d2565b66071afd498d000954610298906001600160a01b031681565b66071afd498d0007546001600160a01b031633146103bf57600080fd5b66071afd498d000780546001600160a01b0319166001600160a01b0392909216919091179055565b60006103f16108e6565b60198251111561040057600080fd5b60005b82518110156104415761042e838281518110610421576104216114f6565b6020026020010151610944565b508061043981611522565b915050610403565b50600190506104506001600055565b919050565b600061045f6108e6565b61046882610944565b90506104506001600055565b336001600160a01b038216148061049b575066071afd498d0007546001600160a01b031633145b6104a457600080fd5b6001600160a01b0316600090815266071afd498d000c60205260409020805460ff19169055565b66071afd498d000a546001600160a01b03163314806104fa575066071afd498d0007546001600160a01b031633145b6105065761050661153b565b61050e610d43565b565b66071afd498d000a546001600160a01b031633148061053f575066071afd498d0007546001600160a01b031633145b61054b5761054b61153b565b61050e610e80565b6000610e106105628142611551565b61056c9190611573565b905090565b600081815266071afd498d000b602052604081205480820361059257506001545b6003546000805b60648110156105df578284116105df576105b3868561102b565b6105bd908361158a565b91506105cb610e108561158a565b9350806105d781611522565b915050610599565b50949350505050565b66038d7ea4c680078166038d7ea4c68000811061060457600080fd5b0154905081565b66071afd498d0007546001600160a01b0316331461062857600080fd5b6001811515146106bb5766071afd498d00095466071afd498d00085460405163095ea7b360e01b81526001600160a01b0391821660048201526000602482015291169063095ea7b3906044016020604051808303816000875af1158015610693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b7919061159d565b5050565b66071afd498d00095466071afd498d00085460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610693573d6000803e3d6000fd5b336001600160a01b0382161480610744575066071afd498d0007546001600160a01b031633145b61074d57600080fd5b6001600160a01b0316600090815266071afd498d000c60205260409020805460ff19166001179055565b60078166038d7ea4c68000811061060457600080fd5b66071afd498d0007546001600160a01b031633146107aa57600080fd5b66071afd498d000a80546001600160a01b0319166001600160a01b0392909216919091179055565b66071afd498d0007546001600160a01b031633146107ef57600080fd5b6001600160a01b03811661080257600080fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610849573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086d91906115ba565b60405163a9059cbb60e01b8152336004820152602481018290529091506001600160a01b0383169063a9059cbb906044016020604051808303816000875af11580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e1919061159d565b505050565b60026000540361093d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055565b66071afd498d0008546040516331a9108f60e11b81526004810183905260009182916001600160a01b0390911690636352211e90602401602060405180830381865afa158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc91906115d3565b6001600160a01b038116600090815266071afd498d000c602052604090205490915060ff1615610a9a5766071afd498d00085460405163430c208160e01b8152336004820152602481018590526001600160a01b039091169063430c208190604401602060405180830381865afa158015610a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5f919061159d565b610a9a5760405162461bcd60e51b815260206004820152600c60248201526b1b9bdd08185c1c1c9bdd995960a21b6044820152606401610934565b66071afd498d000854604051635a2d1e0760e11b8152600481018590526000916001600160a01b03169063b45a3c0e906024016040805180830381865afa158015610ae9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0d9190611602565b905060008160000151600f0b13610b5f5760405162461bcd60e51b8152602060048201526016602482015275139bc8195e1a5cdd1a5b99c81b1bd8dac8199bdd5b9960521b6044820152606401610934565b42816020015111610bbe5760405162461bcd60e51b8152602060048201526024808201527f43616e6e6f742061646420746f2065787069726564206c6f636b2e20576974686044820152636472617760e01b6064820152608401610934565b600084815266071afd498d000b6020526040902054600154811015610be257506001545b6003546000805b6064811015610c2f57828411610c2f57610c03888561102b565b610c0d908361158a565b9150610c1b610e108561158a565b935080610c2781611522565b915050610be9565b508015610ca25766071afd498d000854604051631dd33fc560e31b815260048101899052602481018390526001600160a01b039091169063ee99fe2890604401600060405180830381600087803b158015610c8957600080fd5b505af1158015610c9d573d6000803e3d6000fd5b505050505b600087815266071afd498d000b6020526040812084905560058054839290610ccb90849061158a565b909155505060035466071afd498d0008547fcae2990aa9af8eb1c64713b7eddb3a80bf18e49a94a13fe0d0002b5d61d58f00918991849190610d16906001600160a01b031682611222565b60408051948552602085019390935291830152606082015260800160405180910390a19695505050505050565b610e10610d508142611551565b610d5a9190611573565b6003554260025566071afd498d0009546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610db0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd491906115ba565b90506000600554600454610de89190611659565b90506000610df68284611659565b905080600760035466038d7ea4c680008110610e1457610e146114f6565b016000828254610e24919061158a565b925050819055508060046000828254610e3d919061158a565b909155505060408051428152602081018390527fce749457b74e10f393f2c6b1ce4261b78791376db5a3f501477a809f03f500d6910160405180910390a1505050565b66071afd498d0008546006546001600160a01b03909116906000610e10610ea78142611551565b610eb19190611573565b9050826001600160a01b031663c2c4c5c16040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610eee57600080fd5b505af1158015610f02573d6000803e3d6000fd5b5050505060005b601481101561102357818311611023576000610f258585611222565b60405163d1febfb960e01b8152600481018290529091506000906001600160a01b0387169063d1febfb990602401608060405180830381865afa158015610f70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f94919061166c565b905060008160400151861115610fb6576040820151610fb39087611659565b90505b610fdf818360200151610fc991906116de565b8351610fd59190611705565b600f0b6000611377565b66038d7ea4c680078766038d7ea4c680008110610ffe57610ffe6114f6565b015550505061100f610e108461158a565b92508061101b81611522565b915050610f09565b505060065550565b66071afd498d0008546040516309bb79ed60e11b8152600481018490526001602482015260009182916001600160a01b0390911690631376f3da90604401608060405180830381865afa158015611086573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110aa919061166c565b905066038d7ea4c680078366038d7ea4c6800081106110cb576110cb6114f6565b01546000036110de57600091505061121c565b60078366038d7ea4c6800081106110f7576110f76114f6565b015460000361110a57600091505061121c565b828160400151111561112057600091505061121c565b66071afd498d000854604051637028a55d60e11b815260048101869052602481018590526000916001600160a01b03169063e0514aba90604401602060405180830381865afa158015611177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119b91906115ba565b9050600066038d7ea4c680078566038d7ea4c6800081106111be576111be6114f6565b01546111d283670de0b6b3a7640000611573565b6111dc9190611551565b9050670de0b6b3a764000060078666038d7ea4c680008110611200576112006114f6565b015461120c9083611573565b6112169190611551565b93505050505b92915050565b600080600090506000846001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128d91906115ba565b905060005b608081101561136d578183101561136d57600060026112b1848661158a565b6112bc90600261158a565b6112c69190611551565b60405163d1febfb960e01b8152600481018290529091506000906001600160a01b0389169063d1febfb990602401608060405180830381865afa158015611311573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611335919061166c565b90508681604001511161134a57819450611358565b611355600183611659565b93505b5050808061136590611522565b915050611292565b5090949350505050565b6000818310156113875781611389565b825b9392505050565b6001600160a01b03811681146113a557600080fd5b50565b6000602082840312156113ba57600080fd5b813561138981611390565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611404576114046113c5565b604052919050565b6000602080838503121561141f57600080fd5b823567ffffffffffffffff8082111561143757600080fd5b818501915085601f83011261144b57600080fd5b81358181111561145d5761145d6113c5565b8060051b915061146e8483016113db565b818152918301840191848101908884111561148857600080fd5b938501935b838510156114a65784358252938501939085019061148d565b98975050505050505050565b6000602082840312156114c457600080fd5b5035919050565b80151581146113a557600080fd5b6000602082840312156114eb57600080fd5b8135611389816114cb565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016115345761153461150c565b5060010190565b634e487b7160e01b600052600160045260246000fd5b60008261156e57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761121c5761121c61150c565b8082018082111561121c5761121c61150c565b6000602082840312156115af57600080fd5b8151611389816114cb565b6000602082840312156115cc57600080fd5b5051919050565b6000602082840312156115e557600080fd5b815161138981611390565b8051600f81900b811461045057600080fd5b60006040828403121561161457600080fd5b6040516040810181811067ffffffffffffffff82111715611637576116376113c5565b604052611643836115f0565b8152602083015160208201528091505092915050565b8181038181111561121c5761121c61150c565b60006080828403121561167e57600080fd5b6040516080810181811067ffffffffffffffff821117156116a1576116a16113c5565b6040526116ad836115f0565b81526116bb602084016115f0565b602082015260408301516040820152606083015160608201528091505092915050565b600082600f0b82600f0b0280600f0b91508082146116fe576116fe61150c565b5092915050565b600f82810b9082900b036f7fffffffffffffffffffffffffffffff1981126f7fffffffffffffffffffffffffffffff8213171561121c5761121c61150c56fea264697066735822122007327498347d421212d6dd65ccb469481b9bdf281b74791891d0b499b84eece564736f6c63430008150033";

type RewardDistributorV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardDistributorV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardDistributorV2__factory extends ContractFactory {
  constructor(...args: RewardDistributorV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _voting_escrow: PromiseOrValue<string>,
    _depositor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RewardDistributorV2> {
    return super.deploy(
      _voting_escrow,
      _depositor,
      overrides || {}
    ) as Promise<RewardDistributorV2>;
  }
  override getDeployTransaction(
    _voting_escrow: PromiseOrValue<string>,
    _depositor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _voting_escrow,
      _depositor,
      overrides || {}
    );
  }
  override attach(address: string): RewardDistributorV2 {
    return super.attach(address) as RewardDistributorV2;
  }
  override connect(signer: Signer): RewardDistributorV2__factory {
    return super.connect(signer) as RewardDistributorV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardDistributorV2Interface {
    return new utils.Interface(_abi) as RewardDistributorV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardDistributorV2 {
    return new Contract(address, _abi, signerOrProvider) as RewardDistributorV2;
  }
}
