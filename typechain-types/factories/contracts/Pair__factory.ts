/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Pair, PairInterface } from "../../contracts/Pair";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Fees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockTimestampLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimFees",
    outputs: [
      {
        internalType: "uint256",
        name: "claimed0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimable0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimable1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "current",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentCumulativePrices",
    outputs: [
      {
        internalType: "uint256",
        name: "reserve0Cumulative",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1Cumulative",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fees",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "_reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_blockTimestampLast",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastObservation",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserve0Cumulative",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserve1Cumulative",
            type: "uint256",
          },
        ],
        internalType: "struct Pair.Observation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadata",
    outputs: [
      {
        internalType: "uint256",
        name: "dec0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dec1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r1",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "st",
        type: "bool",
      },
      {
        internalType: "address",
        name: "t0",
        type: "address",
      },
      {
        internalType: "address",
        name: "t1",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "observationLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve0Cumulative",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1Cumulative",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
    ],
    name: "prices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "granularity",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
    ],
    name: "sample",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supplyIndex0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supplyIndex1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600b80546001600160a01b031916339081179091556040805163eb13c4cf60e01b815290516000928392839263eb13c4cf916004808201926060929091908290030181865afa1580156200006a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009091906200072c565b6002805482151560ff19909116179055600980546001600160a01b038085166001600160a01b0319928316179092556008805492861692909116919091179055604051929550909350915083908390620000ea9062000701565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156200011e573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039290921691909117905580156200035657826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000185573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001af9190810190620007ba565b826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620001ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002189190810190620007ba565b6040516020016200022b92919062000872565b604051602081830303815290604052600090816200024a91906200095c565b50826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200028a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002b49190810190620007ba565b826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620002f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200031d9190810190620007ba565b6040516020016200033092919062000a28565b604051602081830303815290604052600190816200034f91906200095c565b5062000561565b826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000395573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003bf9190810190620007ba565b826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620003fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620004289190810190620007ba565b6040516020016200043b92919062000a79565b604051602081830303815290604052600090816200045a91906200095c565b50826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200049a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620004c49190810190620007ba565b826001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000503573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200052d9190810190620007ba565b6040516020016200054092919062000ad6565b604051602081830303815290604052600190816200055f91906200095c565b505b826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620005a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005c6919062000af8565b620005d390600a62000c39565b600d81905550816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000618573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200063e919062000af8565b6200064b90600a62000c39565b600e55505060408051606081018252428152600060208201818152928201818152600c8054600180820183559190935292517fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c760039093029283015592517fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c882015591517fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c990920191909155601a555062000c4a565b6104668062003e3383390190565b80516001600160a01b03811681146200072757600080fd5b919050565b6000806000606084860312156200074257600080fd5b6200074d846200070f565b92506200075d602085016200070f565b9150604084015180151581146200077357600080fd5b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620007b157818101518382015260200162000797565b50506000910152565b600060208284031215620007cd57600080fd5b81516001600160401b0380821115620007e557600080fd5b818401915084601f830112620007fa57600080fd5b8151818111156200080f576200080f6200077e565b604051601f8201601f19908116603f011681019083821181831017156200083a576200083a6200077e565b816040528281528760208487010111156200085457600080fd5b6200086783602083016020880162000794565b979650505050505050565b6e029ba30b13632ab189020a6a690169608d1b8152600083516200089e81600f85016020880162000794565b602f60f81b600f918401918201528351620008c181601084016020880162000794565b01601001949350505050565b600181811c90821680620008e257607f821691505b6020821081036200090357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200095757600081815260208120601f850160051c81016020861015620009325750805b601f850160051c820191505b8181101562000953578281556001016200093e565b5050505b505050565b81516001600160401b038111156200097857620009786200077e565b6200099081620009898454620008cd565b8462000909565b602080601f831160018114620009c85760008415620009af5750858301515b600019600386901b1c1916600185901b17855562000953565b600085815260208120601f198616915b82811015620009f957888601518255948401946001909101908401620009d8565b508582101562000a185787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6473414d4d2d60d81b81526000835162000a4a81600585016020880162000794565b602f60f81b600591840191820152835162000a6d81600684016020880162000794565b01600601949350505050565b7002b37b630ba34b632ab189020a6a690169607d1b81526000835162000aa781601185016020880162000794565b602f60f81b601191840191820152835162000aca81601284016020880162000794565b01601201949350505050565b6476414d4d2d60d81b81526000835162000a4a81600585016020880162000794565b60006020828403121562000b0b57600080fd5b815160ff8116811462000b1d57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000b7b57816000190482111562000b5f5762000b5f62000b24565b8085161562000b6d57918102915b93841c939080029062000b3f565b509250929050565b60008262000b945750600162000c33565b8162000ba35750600062000c33565b816001811462000bbc576002811462000bc75762000be7565b600191505062000c33565b60ff84111562000bdb5762000bdb62000b24565b50506001821b62000c33565b5060208310610133831016604e8410600b841016171562000c0c575081810a62000c33565b62000c18838362000b3a565b806000190482111562000c2f5762000c2f62000b24565b0290505b92915050565b600062000b1d60ff84168362000b83565b6131d98062000c5a6000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80637ecebe0011610151578063bda39cad116100c3578063d294f09311610087578063d294f0931461061d578063d505accf14610625578063dd62ed3e14610638578063ebeb31db14610663578063f140a35a1461066b578063fff6cae91461067e57600080fd5b8063bda39cad146105e6578063bf944dbc146105ef578063c245febc146105f8578063c5700a0214610601578063d21220a71461060a57600080fd5b80639d63848a116101155780639d63848a146105475780639e8cc04b1461056d5780639f767c8814610580578063a1ac4d13146105a0578063a9059cbb146105c0578063bc25cf77146105d357600080fd5b80637ecebe00146104ba57806389afcb44146104da5780638a7b8cf21461050257806395d89b411461052c5780639af1d35a1461053457600080fd5b8063252c09d7116101ea5780634d5a9f8a116101ae5780634d5a9f8a14610438578063517b3f82146104585780635881c4751461046b5780635a76f25e1461047e5780636a6278421461048757806370a082311461049a57600080fd5b8063252c09d71461039e578063313ce567146103b157806332c0defd146103cb578063392f37e9146103d4578063443cb4bc1461042f57600080fd5b806313345fe11161023c57806313345fe11461031f57806318160ddd1461033f5780631df8c71714610356578063205aabf11461035e57806322be3de11461037e57806323b872dd1461038b57600080fd5b8063022c0d9f1461027957806306fdde031461028e5780630902f1ac146102ac578063095ea7b3146102d15780630dfe1681146102f4575b600080fd5b61028c610287366004612c59565b610686565b005b610296610cb8565b6040516102a39190612d11565b60405180910390f35b600f546010546011545b604080519384526020840192909252908201526060016102a3565b6102e46102df366004612d44565b610d46565b60405190151581526020016102a3565b600854610307906001600160a01b031681565b6040516001600160a01b0390911681526020016102a3565b61033261032d366004612d6e565b610db3565b6040516102a39190612da7565b61034860035481565b6040519081526020016102a3565b6102b6610fa2565b61034861036c366004612deb565b60176020526000908152604090205481565b6002546102e49060ff1681565b6102e4610399366004612e06565b611011565b6102b66103ac366004612e42565b6110da565b6103b9601281565b60405160ff90911681526020016102a3565b61034860145481565b600d54600e54600f5460105460025460085460095460408051978852602088019690965294860193909352606085019190915260ff16151560808401526001600160a01b0390811660a08401521660c082015260e0016102a3565b610348600f5481565b610348610446366004612deb565b60186020526000908152604090205481565b610348610466366004612d44565b61110d565b610332610479366004612e5b565b6111f5565b61034860105481565b610348610495366004612deb565b611204565b6103486104a8366004612deb565b60056020526000908152604090205481565b6103486104c8366004612deb565b60076020526000908152604090205481565b6104ed6104e8366004612deb565b61142b565b604080519283526020830191909152016102a3565b61050a61170f565b60408051825181526020808401519082015291810151908201526060016102a3565b61029661178f565b600a54610307906001600160a01b031681565b600854600954604080516001600160a01b039384168152929091166020830152016102a3565b61034861057b366004612e5b565b61179c565b61034861058e366004612deb565b60166020526000908152604090205481565b6103486105ae366004612deb565b60196020526000908152604090205481565b6102e46105ce366004612d44565b611803565b61028c6105e1366004612deb565b611819565b61034860155481565b61034860125481565b61034860135481565b61034860115481565b600954610307906001600160a01b031681565b6104ed611900565b61028c610633366004612e8e565b611a09565b610348610646366004612f01565b600460209081526000928352604080842090915290825290205481565b600c54610348565b610348610679366004612f34565b611d11565b61028c611dbd565b601a5460011461069557600080fd5b6002601a55600b5460408051635c975abb60e01b815290516001600160a01b0390921691635c975abb916004808201926020929091908290030181865afa1580156106e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107089190612f57565b1561071257600080fd5b8415158061071f57508315155b6107565760405162461bcd60e51b8152602060048201526003602482015262494f4160e81b60448201526064015b60405180910390fd5b600f54601054818710801561076a57508086105b61079b5760405162461bcd60e51b8152602060048201526002602482015261125360f21b604482015260640161074d565b60085460095460009182916001600160a01b039182169190811690891682148015906107d95750806001600160a01b0316896001600160a01b031614155b61080a5760405162461bcd60e51b8152602060048201526002602482015261125560f21b604482015260640161074d565b8a1561081b5761081b828a8d611ebd565b891561082c5761082c818a8c611ebd565b861561089957604051639a7bff7960e01b81526001600160a01b038a1690639a7bff79906108669033908f908f908e908e90600401612f79565b600060405180830381600087803b15801561088057600080fd5b505af1158015610894573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa1580156108dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109019190612fc5565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a0823190602401602060405180830381865afa158015610948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096c9190612fc5565b925050506000898561097e9190612ff4565b831161098b57600061099f565b6109958a86612ff4565b61099f9084612ff4565b905060006109ad8a86612ff4565b83116109ba5760006109ce565b6109c48a86612ff4565b6109ce9084612ff4565b9050811515806109dd57508015155b610a0f5760405162461bcd60e51b815260206004820152600360248201526249494160e81b604482015260640161074d565b600854600954600b5460025460405163ce9a7ef760e01b815260ff90911615156004820152602481018690523360448201526001600160a01b039384169392831692610b2892169063ce9a7ef790606401602060405180830381865afa158015610a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa19190612fc5565b600b5460025460405163ce9a7ef760e01b815260ff90911615156004820152602481018790523360448201526001600160a01b039091169063ce9a7ef790606401602060405180830381865afa158015610aff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b239190612fc5565b611fb3565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610b6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b909190612fc5565b6040516370a0823160e01b81523060048201529096506001600160a01b038216906370a0823190602401602060405180830381865afa158015610bd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfb9190612fc5565b9450610c078888612138565b610c118787612138565b1015610c435760405162461bcd60e51b81526020600482015260016024820152604b60f81b604482015260640161074d565b5050610c5184848888612231565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001601a55505050505050505050565b60008054610cc590613007565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf190613007565b8015610d3e5780601f10610d1357610100808354040283529160200191610d3e565b820191906000526020600020905b815481529060010190602001808311610d2157829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610da19086815260200190565b60405180910390a35060015b92915050565b606060008367ffffffffffffffff811115610dd057610dd0613041565b604051908082528060200260200182016040528015610df9578160200160208202803683370190505b50600c54909150600090610e0f90600190612ff4565b905060008080610e1f8789613057565b610e299085612ff4565b90505b83811015610f925786810192506000600c8281548110610e4e57610e4e61306e565b906000526020600020906003020160000154600c8581548110610e7357610e7361306e565b906000526020600020906003020160000154610e8f9190612ff4565b9050600081600c8481548110610ea757610ea761306e565b906000526020600020906003020160010154600c8781548110610ecc57610ecc61306e565b906000526020600020906003020160010154610ee89190612ff4565b610ef2919061309a565b9050600082600c8581548110610f0a57610f0a61306e565b906000526020600020906003020160020154600c8881548110610f2f57610f2f61306e565b906000526020600020906003020160020154610f4b9190612ff4565b610f55919061309a565b9050610f638c8e84846123c4565b888681518110610f7557610f7561306e565b602002602001018181525050846001019450859350505050610e2c565b509293505050505b949350505050565b6012546013544260008080610fc0600f546010546011549192909190565b925092509250838114611009576000610fd98286612ff4565b9050610fe58185613057565b610fef90886130bc565b9650610ffb8184613057565b61100590876130bc565b9550505b505050909192565b6001600160a01b03831660008181526004602090815260408083203380855292528220549192909190821480159061104b57506000198114155b156110c157600061105c8583612ff4565b6001600160a01b038881166000818152600460209081526040808320948916808452948252918290208590559051848152939450919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b6110cc868686612565565b6001925050505b9392505050565b600c81815481106110ea57600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b60008061111861170f565b9050600080611125610fa2565b5084519193509150420361118d57600c805461114390600290612ff4565b815481106111535761115361306e565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505092505b825160009061119c9042612ff4565b90506000818560200151856111b19190612ff4565b6111bb919061309a565b90506000828660400151856111d09190612ff4565b6111da919061309a565b90506111e8888a84846123c4565b9998505050505050505050565b6060610f9a8484846001610db3565b6000601a5460011461121557600080fd5b6002601a55600f546010546008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128d9190612fc5565b6009546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156112db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ff9190612fc5565b9050600061130d8584612ff4565b9050600061131b8584612ff4565b600354909150600081900361135d576103e861133f61133a8486613057565b612625565b6113499190612ff4565b975061135860006103e861270d565b611392565b61138f8761136b8386613057565b611375919061309a565b876113808486613057565b61138a919061309a565b6127a0565b97505b876000036113c85760405162461bcd60e51b8152602060048201526003602482015262494c4d60e81b604482015260640161074d565b6113d2898961270d565b6113de85858989612231565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001601a55509395945050505050565b600080601a5460011461143d57600080fd5b6002601a55600f546010546008546009546040516370a0823160e01b81523060048201526001600160a01b03928316929091169060009083906370a0823190602401602060405180830381865afa15801561149c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c09190612fc5565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561150a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152e9190612fc5565b3060009081526005602052604090205460035491925090806115508584613057565b61155a919061309a565b9950806115678484613057565b611571919061309a565b9850891580159061158157508815155b6115b35760405162461bcd60e51b815260206004820152600360248201526224a62160e91b604482015260640161074d565b6115bd30836127b6565b6115c8868c8c611ebd565b6115d3858c8b611ebd565b6040516370a0823160e01b81523060048201526001600160a01b038716906370a0823190602401602060405180830381865afa158015611617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163b9190612fc5565b6040516370a0823160e01b81523060048201529094506001600160a01b038616906370a0823190602401602060405180830381865afa158015611682573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a69190612fc5565b92506116b484848a8a612231565b604080518b8152602081018b90526001600160a01b038d169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a350505050505050506001601a81905550915091565b61173360405180606001604052806000815260200160008152602001600081525090565b600c805461174390600190612ff4565b815481106117535761175361306e565b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050905090565b60018054610cc590613007565b6000806117ac8585856001610db3565b80519091506000905b80156117ee57806001900390508281815181106117d4576117d461306e565b6020026020010151826117e791906130bc565b91506117b5565b506117f9848261309a565b9695505050505050565b6000611810338484612565565b50600192915050565b601a5460011461182857600080fd5b6002601a55600854600954600f546040516370a0823160e01b81523060048201526001600160a01b0393841693909216916118be91849186919083906370a08231906024015b602060405180830381865afa15801561188b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118af9190612fc5565b6118b99190612ff4565b611ebd565b6010546040516370a0823160e01b81523060048201526118f69183918691906001600160a01b038416906370a082319060240161186e565b50506001601a5550565b60008061190c33612841565b5050336000908152601860209081526040808320546019909252909120548115158061193757508015155b15611a0557336000818152601860209081526040808320839055601990915280822091909155600a54905163299e7ae760e11b8152600481019290925260248201849052604482018390526001600160a01b03169063533cf5ce90606401600060405180830381600087803b1580156119af57600080fd5b505af11580156119c3573d6000803e3d6000fd5b505060408051858152602081018590523393508392507f865ca08d59f5cb456e85cd2f7ef63664ea4f73327414e9d8152c4158b0e94645910160405180910390a35b9091565b42841015611a495760405162461bcd60e51b815260206004820152600d60248201526c14185a5c8e8811561412549151609a1b604482015260640161074d565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611a7991906130cf565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f19818403018152918152815160209283012060068190556001600160a01b038a166000908152600790935290822080547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087611b448361316e565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001611bbd92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611c28573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590611c5e5750886001600160a01b0316816001600160a01b0316145b611caa5760405162461bcd60e51b815260206004820152601760248201527f506169723a20494e56414c49445f5349474e4154555245000000000000000000604482015260640161074d565b6001600160a01b038981166000818152600460209081526040808320948d16808452948252918290208b905590518a81527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050505050505050565b600f54601054600b5460025460405163ce9a7ef760e01b815260ff909116151560048201526024810186905233604482015260009392916001600160a01b03169063ce9a7ef790606401602060405180830381865afa158015611d78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9c9190612fc5565b611da69086612ff4565b9450611db4858584846123c4565b95945050505050565b601a54600114611dcc57600080fd5b6002601a556008546040516370a0823160e01b8152306004820152611eb6916001600160a01b0316906370a0823190602401602060405180830381865afa158015611e1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3f9190612fc5565b6009546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611e87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eab9190612fc5565b600f54601054612231565b6001601a55565b8015611fae57826001600160a01b03163b600003611eda57600080fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611f369190613187565b6000604051808303816000865af19150503d8060008114611f73576040519150601f19603f3d011682016040523d82523d6000602084013e611f78565b606091505b5091509150818015611fa2575080511580611fa2575080806020019051810190611fa29190612f57565b611fab57600080fd5b50505b505050565b811561201a57600854600a54611fd6916001600160a01b03908116911684611ebd565b600354600090611fee84670de0b6b3a7640000613057565b611ff8919061309a565b9050801561201857806014600082825461201291906130bc565b90915550505b505b801561208157600954600a5461203d916001600160a01b03908116911683611ebd565b60035460009061205583670de0b6b3a7640000613057565b61205f919061309a565b9050801561207f57806015600082825461207991906130bc565b90915550505b505b8115158061208e57508015155b1561213457600a54604051630ab6d72560e01b815260048101849052602481018390526001600160a01b0390911690630ab6d72590604401600060405180830381600087803b1580156120e057600080fd5b505af11580156120f4573d6000803e3d6000fd5b505060408051858152602081018590523393507f112c256902bf554b6ed882d2936687aaeb4225e8cd5b51303c90ca6cf43a860292500160405180910390a25b5050565b60025460009060ff161561222057600d5460009061215e85670de0b6b3a7640000613057565b612168919061309a565b90506000600e5484670de0b6b3a76400006121839190613057565b61218d919061309a565b90506000670de0b6b3a76400006121a48385613057565b6121ae919061309a565b90506000670de0b6b3a76400006121c58480613057565b6121cf919061309a565b670de0b6b3a76400006121e28680613057565b6121ec919061309a565b6121f691906130bc565b9050670de0b6b3a764000061220b8284613057565b612215919061309a565b945050505050610dad565b61222a8284613057565b9050610dad565b60115442906000906122439083612ff4565b9050801580159061225357508315155b801561225e57508215155b156122a55761226d8185613057565b6012600082825461227e91906130bc565b9091555061228e90508184613057565b6013600082825461229f91906130bc565b90915550505b60006122af61170f565b80519091506122be9084612ff4565b9150610708821115612373576040805160608101825284815260125460208201908152601354928201928352600c805460018101825560009190915291517fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7600390930292830155517fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c882015590517fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c9909101555b600f8790556010869055601183905560408051888152602081018890527fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a910160405180910390a150505050505050565b60025460009060ff16156125155760006123de8484612138565b600d549091506123f685670de0b6b3a7640000613057565b612400919061309a565b600e5490945061241884670de0b6b3a7640000613057565b612422919061309a565b60085490935060009081906001600160a01b03888116911614612446578486612449565b85855b60085491935091506001600160a01b0388811691161461248757600e5461247889670de0b6b3a7640000613057565b612482919061309a565b6124a6565b600d5461249c89670de0b6b3a7640000613057565b6124a6919061309a565b975060006124be6124b7848b6130bc565b85846129a1565b6124c89083612ff4565b600854909150670de0b6b3a7640000906001600160a01b038a81169116146124f257600d546124f6565b600e545b6125009083613057565b61250a919061309a565b945050505050610f9a565b60085460009081906001600160a01b03878116911614612536578385612539565b84845b909250905061254887836130bc565b6125528289613057565b61255c919061309a565b92505050610f9a565b61256e83612841565b61257782612841565b6001600160a01b0383166000908152600560205260408120805483929061259f908490612ff4565b90915550506001600160a01b038216600090815260056020526040812080548392906125cc9084906130bc565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161261891815260200190565b60405180910390a3505050565b60008160000361263757506000919050565b6000600161264484612aa4565b901c6001901b9050600181848161265d5761265d613084565b048201901c9050600181848161267557612675613084565b048201901c9050600181848161268d5761268d613084565b048201901c905060018184816126a5576126a5613084565b048201901c905060018184816126bd576126bd613084565b048201901c905060018184816126d5576126d5613084565b048201901c905060018184816126ed576126ed613084565b048201901c90506110d38182858161270757612707613084565b046127a0565b61271682612841565b806003600082825461272891906130bc565b90915550506001600160a01b038216600090815260056020526040812080548392906127559084906130bc565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b60008183106127af57816110d3565b5090919050565b6127bf82612841565b80600360008282546127d19190612ff4565b90915550506001600160a01b038216600090815260056020526040812080548392906127fe908490612ff4565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001612794565b6001600160a01b038116600090815260056020526040902054801561296f576001600160a01b03821660009081526016602090815260408083208054601780855292852080546014546015549481905594909552829055936128a38584612ff4565b905060006128b18584612ff4565b9050811561290c576000670de0b6b3a76400006128ce848a613057565b6128d8919061309a565b6001600160a01b038a166000908152601860205260408120805492935083929091906129059084906130bc565b9091555050505b8015612965576000670de0b6b3a7640000612927838a613057565b612931919061309a565b6001600160a01b038a1660009081526019602052604081208054929350839290919061295e9084906130bc565b9091555050505b5050505050505050565b6014546001600160a01b0383166000908152601660209081526040808320939093556015546017909152919020555050565b600060ff5b8015612a9b578260006129b98783612b38565b905085811015612a095760006129cf8887612bd5565b6129d98389612ff4565b6129eb90670de0b6b3a7640000613057565b6129f5919061309a565b9050612a0181876130bc565b955050612a4b565b6000612a158887612bd5565b612a1f8884612ff4565b612a3190670de0b6b3a7640000613057565b612a3b919061309a565b9050612a478187612ff4565b9550505b81851115612a74576001612a5f8387612ff4565b11612a6f578493505050506110d3565b612a90565b6001612a808684612ff4565b11612a90578493505050506110d3565b5050600019016129a6565b50909392505050565b600080608083901c15612ab957608092831c92015b604083901c15612acb57604092831c92015b602083901c15612add57602092831c92015b601083901c15612aef57601092831c92015b600883901c15612b0157600892831c92015b600483901c15612b1357600492831c92015b600283901c15612b2557600292831c92015b600183901c15610dad5760010192915050565b6000670de0b6b3a764000082818581612b518280613057565b612b5b919061309a565b612b659190613057565b612b6f919061309a565b612b799190613057565b612b83919061309a565b670de0b6b3a7640000808481612b998280613057565b612ba3919061309a565b612bad9190613057565b612bb7919061309a565b612bc19086613057565b612bcb919061309a565b6110d391906130bc565b6000670de0b6b3a76400008381612bec8280613057565b612bf6919061309a565b612c009190613057565b612c0a919061309a565b670de0b6b3a764000080612c1e8580613057565b612c28919061309a565b612c33866003613057565b612bc19190613057565b80356001600160a01b0381168114612c5457600080fd5b919050565b600080600080600060808688031215612c7157600080fd5b8535945060208601359350612c8860408701612c3d565b9250606086013567ffffffffffffffff80821115612ca557600080fd5b818801915088601f830112612cb957600080fd5b813581811115612cc857600080fd5b896020828501011115612cda57600080fd5b9699959850939650602001949392505050565b60005b83811015612d08578181015183820152602001612cf0565b50506000910152565b6020815260008251806020840152612d30816040850160208701612ced565b601f01601f19169190910160400192915050565b60008060408385031215612d5757600080fd5b612d6083612c3d565b946020939093013593505050565b60008060008060808587031215612d8457600080fd5b612d8d85612c3d565b966020860135965060408601359560600135945092505050565b6020808252825182820181905260009190848201906040850190845b81811015612ddf57835183529284019291840191600101612dc3565b50909695505050505050565b600060208284031215612dfd57600080fd5b6110d382612c3d565b600080600060608486031215612e1b57600080fd5b612e2484612c3d565b9250612e3260208501612c3d565b9150604084013590509250925092565b600060208284031215612e5457600080fd5b5035919050565b600080600060608486031215612e7057600080fd5b612e7984612c3d565b95602085013595506040909401359392505050565b600080600080600080600060e0888a031215612ea957600080fd5b612eb288612c3d565b9650612ec060208901612c3d565b95506040880135945060608801359350608088013560ff81168114612ee457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612f1457600080fd5b612f1d83612c3d565b9150612f2b60208401612c3d565b90509250929050565b60008060408385031215612f4757600080fd5b82359150612f2b60208401612c3d565b600060208284031215612f6957600080fd5b815180151581146110d357600080fd5b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b600060208284031215612fd757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610dad57610dad612fde565b600181811c9082168061301b57607f821691505b60208210810361303b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b8082028115828204841417610dad57610dad612fde565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6000826130b757634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610dad57610dad612fde565b600080835481600182811c9150808316806130eb57607f831692505b6020808410820361310a57634e487b7160e01b86526022600452602486fd5b81801561311e576001811461313357613160565b60ff1986168952841515850289019650613160565b60008a81526020902060005b868110156131585781548b82015290850190830161313f565b505084890196505b509498975050505050505050565b60006001820161318057613180612fde565b5060010190565b60008251613199818460208701612ced565b919091019291505056fea26469706673582212207e522ef2606a67a939e3be2485ba79ba2adac40b0ba61533fa6f7fac14c5811564736f6c6343000815003360e060405234801561001057600080fd5b5060405161046638038061046683398101604081905261002f91610066565b336080526001600160a01b0391821660a0521660c052610099565b80516001600160a01b038116811461006157600080fd5b919050565b6000806040838503121561007957600080fd5b6100828361004a565b91506100906020840161004a565b90509250929050565b60805160a05160c0516103996100cd600039600061015f0152600061011c015260008181606e015260d701526103996000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630ab6d7251461003b578063533cf5ce14610050575b600080fd5b61004e610049366004610281565b610063565b005b61004e61005e3660046102a3565b6100cc565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461009857600080fd5b81156100b057816000546100ac91906102e4565b6000555b80156100c857806001546100c491906102e4565b6001555b5050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461010157600080fd5b811561014457600054828110610142578281036000556101427f0000000000000000000000000000000000000000000000000000000000000000858561018c565b505b801561018757600154818110610185578181036001556101857f0000000000000000000000000000000000000000000000000000000000000000858461018c565b505b505050565b801561018757826001600160a01b03163b6000036101a957600080fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610205919061030b565b6000604051808303816000865af19150503d8060008114610242576040519150601f19603f3d011682016040523d82523d6000602084013e610247565b606091505b5091509150818015610271575080511580610271575080806020019051810190610271919061033a565b61027a57600080fd5b5050505050565b6000806040838503121561029457600080fd5b50508035926020909101359150565b6000806000606084860312156102b857600080fd5b83356001600160a01b03811681146102cf57600080fd5b95602085013595506040909401359392505050565b8082018082111561030557634e487b7160e01b600052601160045260246000fd5b92915050565b6000825160005b8181101561032c5760208186018101518583015201610312565b506000920191825250919050565b60006020828403121561034c57600080fd5b8151801515811461035c57600080fd5b939250505056fea2646970667358221220d33be224894f73b3b23b10ccd26428b349f89da00fa40e423ce3fb4b57e86f5464736f6c63430008150033";

type PairConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pair__factory extends ContractFactory {
  constructor(...args: PairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Pair> {
    return super.deploy(overrides || {}) as Promise<Pair>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Pair {
    return super.attach(address) as Pair;
  }
  override connect(signer: Signer): Pair__factory {
    return super.connect(signer) as Pair__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PairInterface {
    return new utils.Interface(_abi) as PairInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pair {
    return new Contract(address, _abi, signerOrProvider) as Pair;
  }
}
