/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Router, RouterInterface } from "../../contracts/Router";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pairFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "bool",
        name: "stable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "stable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amountTokenDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "stable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bool",
            name: "stable",
            type: "bool",
          },
        ],
        internalType: "struct Router.route[]",
        name: "routes",
        type: "tuple[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "bool",
        name: "stable",
        type: "bool",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "isPair",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "bool",
        name: "stable",
        type: "bool",
      },
    ],
    name: "pairFor",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "bool",
        name: "stable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
    ],
    name: "quoteAddLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "bool",
        name: "stable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "quoteRemoveLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "bool",
        name: "stable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "stable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "stable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approveMax",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "removeLiquidityETHWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "bool",
        name: "stable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approveMax",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "removeLiquidityWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bool",
            name: "stable",
            type: "bool",
          },
        ],
        internalType: "struct Router.route[]",
        name: "routes",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactETHForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bool",
            name: "stable",
            type: "bool",
          },
        ],
        internalType: "struct Router.route[]",
        name: "routes",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForETH",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bool",
            name: "stable",
            type: "bool",
          },
        ],
        internalType: "struct Router.route[]",
        name: "routes",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenFrom",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenTo",
        type: "address",
      },
      {
        internalType: "bool",
        name: "stable",
        type: "bool",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokensSimple",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200388d3803806200388d833981016040819052620000349162000069565b6001600160a01b039182166080521660a052620000a1565b80516001600160a01b03811681146200006457600080fd5b919050565b600080604083850312156200007d57600080fd5b62000088836200004c565b915062000098602084016200004c565b90509250929050565b60805160a05161372c620001616000396000818161013301528181610200015281816108ee01528181610b2d01528181610d7e015281816113d9015281816114ec0152818161157a01528181611c7c01528181611cb201528181611ce701528181611d7c01528181611ebb0152611f0b01526000818161040201528181610c1301528181610e66015281816110e0015281816111f4015281816118290152818161199d01528181611fa80152818161263701526126d8015261372c6000f3fe6080604052600436106101235760003560e01c80635e60dab5116100a0578063b7e0d4c011610064578063b7e0d4c0146103dd578063c45a0155146103f0578063d7b0e0a514610424578063e5e31b1314610444578063f41766d81461047457600080fd5b80635e60dab51461034a57806367ffb66a1461036a5780639881fcb41461037d57806398a0fb3c1461039d578063a32b1fcd146103bd57600080fd5b8063448725b4116100e7578063448725b41461025a5780634c1ee03e1461027a578063544caa561461029a5780635a47ddc3146102da5780635e1e63251461031557600080fd5b80630dede6c41461016757806313dcfc59146101a157806318a13086146101ce5780633fc8cef3146101ee5780634386e63c1461023a57600080fd5b3661016257336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461016057610160612bce565b005b600080fd5b34801561017357600080fd5b50610187610182366004612c0a565b610494565b604080519283526020830191909152015b60405180910390f35b3480156101ad57600080fd5b506101c16101bc366004612c8f565b6106ae565b6040516101989190612d0a565b3480156101da57600080fd5b506101c16101e9366004612d93565b6108c1565b3480156101fa57600080fd5b506102227f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610198565b34801561024657600080fd5b50610187610255366004612e06565b610c0c565b34801561026657600080fd5b50610187610275366004612e6d565b610d73565b34801561028657600080fd5b50610222610295366004612f17565b610e4c565b3480156102a657600080fd5b506102ba6102b5366004612f62565b610ee8565b604080516001600160a01b03938416815292909116602083015201610198565b3480156102e657600080fd5b506102fa6102f5366004612f9b565b610fc8565b60408051938452602084019290925290820152606001610198565b34801561032157600080fd5b5061033561033036600461302a565b6110a8565b60408051928352901515602083015201610198565b34801561035657600080fd5b50610187610365366004612f17565b6112fc565b6101c1610378366004613061565b6113b4565b34801561038957600080fd5b506101c1610398366004613185565b611713565b3480156103a957600080fd5b506102fa6103b8366004613241565b611995565b3480156103c957600080fd5b506101876103d836600461329c565b611b95565b6102fa6103eb366004613358565b611c50565b3480156103fc57600080fd5b506102227f000000000000000000000000000000000000000000000000000000000000000081565b34801561043057600080fd5b5061018761043f366004613358565b611e91565b34801561045057600080fd5b5061046461045f3660046133b3565b611f86565b6040519015158152602001610198565b34801561048057600080fd5b506101c161048f366004612d93565b61201b565b60008082428110156104c15760405162461bcd60e51b81526004016104b8906133d0565b60405180910390fd5b60006104ce8c8c8c610e4c565b6040516323b872dd60e01b81523360048201526001600160a01b03821660248201819052604482018c90529192506323b872dd906064016020604051808303816000875af1158015610524573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054891906133f9565b61055157600080fd5b60405163226bf2d160e21b81526001600160a01b03878116600483015260009182918416906389afcb449060240160408051808303816000875af115801561059d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c19190613416565b9150915060006105d18f8f610ee8565b509050806001600160a01b03168f6001600160a01b0316146105f45781836105f7565b82825b90975095508a87101561064c5760405162461bcd60e51b815260206004820152601d60248201527f526f757465723a20494e53554646494349454e545f415f414d4f554e5400000060448201526064016104b8565b8986101561069c5760405162461bcd60e51b815260206004820152601d60248201527f526f757465723a20494e53554646494349454e545f425f414d4f554e5400000060448201526064016104b8565b50505050509850989650505050505050565b606081428110156106d15760405162461bcd60e51b81526004016104b8906133d0565b604080516001808252818301909252600091816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816106e8579050509050878160008151811061072b5761072b61343a565b6020026020010151600001906001600160a01b031690816001600160a01b03168152505086816000815181106107635761076361343a565b6020026020010151602001906001600160a01b031690816001600160a01b031681525050858160008151811061079b5761079b61343a565b60209081029190910101519015156040909101526107b98a82611713565b92508883600185516107cb9190613466565b815181106107db576107db61343a565b602002602001015110156108015760405162461bcd60e51b81526004016104b890613479565b6108a9816000815181106108175761081761343a565b602002602001015160000151336108898460008151811061083a5761083a61343a565b602002602001015160000151856000815181106108595761085961343a565b602002602001015160200151866000815181106108785761087861343a565b602002602001015160400151610e4c565b8660008151811061089c5761089c61343a565b6020026020010151612140565b6108b483828761223f565b5050979650505050505050565b606081428110156108e45760405162461bcd60e51b81526004016104b8906133d0565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016868661091b600182613466565b81811061092a5761092a61343a565b905060600201602001602081019061094291906133b3565b6001600160a01b0316146109685760405162461bcd60e51b81526004016104b8906134bb565b6109c4888787808060200260200160405190810160405280939291908181526020016000905b828210156109ba576109ab606083028601368190038101906134e9565b8152602001906001019061098e565b5050505050611713565b91508682600184516109d69190613466565b815181106109e6576109e661343a565b60200260200101511015610a0c5760405162461bcd60e51b81526004016104b890613479565b610ace86866000818110610a2257610a2261343a565b610a3892602060609092020190810191506133b3565b33610abb89896000818110610a4f57610a4f61343a565b610a6592602060609092020190810191506133b3565b8a8a6000818110610a7857610a7861343a565b9050606002016020016020810190610a9091906133b3565b8b8b6000818110610aa357610aa361343a565b90506060020160400160208101906102959190613505565b8560008151811061089c5761089c61343a565b610b2b828787808060200260200160405190810160405280939291908181526020016000905b82821015610b2057610b11606083028601368190038101906134e9565b81526020019060010190610af4565b50505050503061223f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d8360018551610b699190613466565b81518110610b7957610b7961343a565b60200260200101516040518263ffffffff1660e01b8152600401610b9f91815260200190565b600060405180830381600087803b158015610bb957600080fd5b505af1158015610bcd573d6000803e3d6000fd5b50505050610c01848360018551610be49190613466565b81518110610bf457610bf461343a565b602002602001015161252b565b509695505050505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636801cc308888886040518463ffffffff1660e01b8152600401610c6193929190613522565b602060405180830381865afa158015610c7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca29190613546565b90506001600160a01b038116610cbf576000809250925050610d6a565b600080610ccd8989896112fc565b915091506000836001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d359190613563565b905080610d42848961357c565b610d4c91906135a9565b955080610d59838961357c565b610d6391906135a9565b9450505050505b94509492505050565b6000806000610da38e7f00000000000000000000000000000000000000000000000000000000000000008f610e4c565b9050600087610db2578c610db6565b6000195b60405163d505accf60e01b81529091506001600160a01b0383169063d505accf90610df1903390309086908f908e908e908e906004016135cb565b600060405180830381600087803b158015610e0b57600080fd5b505af1158015610e1f573d6000803e3d6000fd5b50505050610e328f8f8f8f8f8f8f611e91565b809450819550505050509b509b9950505050505050505050565b6040516306801cc360e41b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636801cc3090610e9f90879087908790600401613522565b602060405180830381865afa158015610ebc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee09190613546565b949350505050565b600080826001600160a01b0316846001600160a01b031603610f4c5760405162461bcd60e51b815260206004820152601b60248201527f526f757465723a204944454e544943414c5f414444524553534553000000000060448201526064016104b8565b826001600160a01b0316846001600160a01b031610610f6c578284610f6f565b83835b90925090506001600160a01b038216610fc15760405162461bcd60e51b8152602060048201526014602482015273526f757465723a205a45524f5f4144445245535360601b60448201526064016104b8565b9250929050565b60008060008342811015610fee5760405162461bcd60e51b81526004016104b8906133d0565b610ffd8d8d8d8d8d8d8d612600565b9094509250600061100f8e8e8e610e4c565b905061101d8e338388612140565b6110298d338387612140565b6040516335313c2160e11b81526001600160a01b038881166004830152821690636a627842906024016020604051808303816000875af1158015611071573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110959190613563565b9250505099509950999650505050505050565b60008060006110b985856001610e4c565b60405163e5e31b1360e01b81526001600160a01b03828116600483015291925060009182917f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa158015611129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114d91906133f9565b156111c6576040516378a051ad60e11b8152600481018990526001600160a01b03888116602483015284169063f140a35a90604401602060405180830381865afa15801561119f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c39190613563565b91505b6111d287876000610e4c565b60405163e5e31b1360e01b81526001600160a01b0380831660048301529194507f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa15801561123d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126191906133f9565b156112da576040516378a051ad60e11b8152600481018990526001600160a01b03888116602483015284169063f140a35a90604401602060405180830381865afa1580156112b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d79190613563565b90505b8082116112e9578060006112ed565b8160015b94509450505050935093915050565b600080600061130b8686610ee8565b50905060008061131c888888610e4c565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137d919061360c565b5091509150826001600160a01b0316886001600160a01b0316146113a25780826113a5565b81815b90999098509650505050505050565b606081428110156113d75760405162461bcd60e51b81526004016104b8906133d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316868660008181106114145761141461343a565b61142a92602060609092020190810191506133b3565b6001600160a01b0316146114505760405162461bcd60e51b81526004016104b8906134bb565b6114a2348787808060200260200160405190810160405280939291908181526020016000905b828210156109ba57611493606083028601368190038101906134e9565b81526020019060010190611476565b91508682600184516114b49190613466565b815181106114c4576114c461343a565b602002602001015110156114ea5760405162461bcd60e51b81526004016104b890613479565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db08360008151811061152c5761152c61343a565b60200260200101516040518263ffffffff1660e01b81526004016000604051808303818588803b15801561155f57600080fd5b505af1158015611573573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb611611888860008181106115bd576115bd61343a565b6115d392602060609092020190810191506133b3565b898960008181106115e6576115e661343a565b90506060020160200160208101906115fe91906133b3565b8a8a6000818110610aa357610aa361343a565b846000815181106116245761162461343a565b60200260200101516040518363ffffffff1660e01b815260040161165d9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801561167c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a091906133f9565b6116ac576116ac612bce565b611709828787808060200260200160405190810160405280939291908181526020016000905b828210156116fe576116ef606083028601368190038101906134e9565b815260200190600101906116d2565b50505050508661223f565b5095945050505050565b60606001825110156117375760405162461bcd60e51b81526004016104b8906134bb565b815161174490600161363a565b67ffffffffffffffff81111561175c5761175c6130c8565b604051908082528060200260200182016040528015611785578160200160208202803683370190505b509050828160008151811061179c5761179c61343a565b60200260200101818152505060005b825181101561198e5760006118078483815181106117cb576117cb61343a565b6020026020010151600001518584815181106117e9576117e961343a565b6020026020010151602001518685815181106108785761087861343a565b60405163e5e31b1360e01b81526001600160a01b0380831660048301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa158015611872573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189691906133f9565b1561197b57806001600160a01b031663f140a35a8484815181106118bc576118bc61343a565b60200260200101518685815181106118d6576118d661343a565b6020026020010151600001516040518363ffffffff1660e01b81526004016119119291909182526001600160a01b0316602082015260400190565b602060405180830381865afa15801561192e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119529190613563565b8361195e84600161363a565b8151811061196e5761196e61343a565b6020026020010181815250505b50806119868161364d565b9150506117ab565b5092915050565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636801cc308a8a8a6040518463ffffffff1660e01b81526004016119eb93929190613522565b602060405180830381865afa158015611a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2c9190613546565b9050600080806001600160a01b03841615611ab657836001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa39190613563565b9050611ab08c8c8c6112fc565b90935091505b82158015611ac2575081155b15611af3578896508795506103e8611ae2611add888a61357c565b61287e565b611aec9190613466565b9450611b86565b6000611b008a858561296d565b9050888111611b4857899750955085611b4184611b1d848b61357c565b611b2791906135a9565b84611b32858b61357c565b611b3c91906135a9565b612a2f565b9550611b84565b6000611b558a858761296d565b9850899750889050611b8085611b6b858461357c565b611b7591906135a9565b85611b32868c61357c565b9650505b505b50505050955095509592505050565b6000806000611ba58f8f8f610e4c565b9050600087611bb4578c611bb8565b6000195b60405163d505accf60e01b81529091506001600160a01b0383169063d505accf90611bf3903390309086908f908e908e908e906004016135cb565b600060405180830381600087803b158015611c0d57600080fd5b505af1158015611c21573d6000803e3d6000fd5b5050505050611c368f8f8f8f8f8f8f8f610494565b8093508194505050509c509c9a5050505050505050505050565b60008060008342811015611c765760405162461bcd60e51b81526004016104b8906133d0565b611ca58b7f00000000000000000000000000000000000000000000000000000000000000008c8c348d8d612600565b90945092506000611cd78c7f00000000000000000000000000000000000000000000000000000000000000008d610e4c565b9050611ce58c338388612140565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b158015611d4057600080fd5b505af1158015611d54573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038581166004830152602482018990527f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb925060440190506020604051808303816000875af1158015611dc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ded91906133f9565b611df957611df9612bce565b6040516335313c2160e11b81526001600160a01b038881166004830152821690636a627842906024016020604051808303816000875af1158015611e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e659190613563565b925083341115611e8257611e8233611e7d8634613466565b61252b565b50509750975097945050505050565b6000808242811015611eb55760405162461bcd60e51b81526004016104b8906133d0565b611ee58a7f00000000000000000000000000000000000000000000000000000000000000008b8b8b8b308b610494565b9093509150611ef58a8685612a45565b604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015611f5757600080fd5b505af1158015611f6b573d6000803e3d6000fd5b50505050611f79858361252b565b5097509795505050505050565b60405163e5e31b1360e01b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e5e31b1390602401602060405180830381865afa158015611ff1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201591906133f9565b92915050565b6060814281101561203e5760405162461bcd60e51b81526004016104b8906133d0565b612090888787808060200260200160405190810160405280939291908181526020016000905b828210156109ba57612081606083028601368190038101906134e9565b81526020019060010190612064565b91508682600184516120a29190613466565b815181106120b2576120b261343a565b602002602001015110156120d85760405162461bcd60e51b81526004016104b890613479565b6120ee86866000818110610a2257610a2261343a565b610c01828787808060200260200160405190810160405280939291908181526020016000905b828210156116fe57612131606083028601368190038101906134e9565b81526020019060010190612114565b8015612239576000846001600160a01b03163b1161215d57600080fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916121c1919061368a565b6000604051808303816000865af19150503d80600081146121fe576040519150601f19603f3d011682016040523d82523d6000602084013e612203565b606091505b509150915081801561222d57508051158061222d57508080602001905181019061222d91906133f9565b61223657600080fd5b50505b50505050565b60005b825181101561248e5760006122918483815181106122625761226261343a565b6020026020010151600001518584815181106122805761228061343a565b602002602001015160200151610ee8565b5090506000856122a284600161363a565b815181106122b2576122b261343a565b60200260200101519050600080836001600160a01b03168786815181106122db576122db61343a565b6020026020010151600001516001600160a01b0316146122fd57826000612301565b6000835b915091506000600188516123159190613466565b86106123215786612394565b6123948861233088600161363a565b815181106123405761234061343a565b6020026020010151600001518988600161235a919061363a565b8151811061236a5761236a61343a565b6020026020010151602001518a896001612384919061363a565b815181106108785761087861343a565b90506123e78887815181106123ab576123ab61343a565b6020026020010151600001518988815181106123c9576123c961343a565b6020026020010151602001518a89815181106108785761087861343a565b6001600160a01b031663022c0d9f84848460006040519080825280601f01601f191660200182016040528015612424576020820181803683370190505b506040518563ffffffff1660e01b815260040161244494939291906136a6565b600060405180830381600087803b15801561245e57600080fd5b505af1158015612472573d6000803e3d6000fd5b50505050505050505080806124869061364d565b915050612242565b50806001600160a01b0316336001600160a01b03167fff3715fa8f2d4d791dd7a610a545050b8c6fe3a62b0f6c38f2f96a00598fe483856000815181106124d7576124d761343a565b6020026020010151856000815181106124f2576124f261343a565b60200260200101516000015160405161251e9291909182526001600160a01b0316602082015260400190565b60405180910390a3505050565b80156125fc57604080516000808252602082019092526001600160a01b03841690839060405161255b919061368a565b60006040518083038185875af1925050503d8060008114612598576040519150601f19603f3d011682016040523d82523d6000602084013e61259d565b606091505b50509050806125fa5760405162461bcd60e51b815260206004820152602360248201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960448201526213115160ea1b60648201526084016104b8565b505b5050565b6000808386101561261057600080fd5b8285101561261d57600080fd5b6040516306801cc360e41b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636801cc3090612670908d908d908d90600401613522565b602060405180830381865afa15801561268d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126b19190613546565b90506001600160a01b038116612757576040516320b7f73960e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906382dfdce490612711908d908d908d90600401613522565b6020604051808303816000875af1158015612730573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127549190613546565b90505b6000806127658c8c8c6112fc565b91509150816000148015612777575080155b156127875788945087935061286f565b60006127948a848461296d565b90508881116127f857868110156127ed5760405162461bcd60e51b815260206004820152601d60248201527f526f757465723a20494e53554646494349454e545f425f414d4f554e5400000060448201526064016104b8565b89955093508361286d565b60006128058a848661296d565b90508a81111561281757612817612bce565b888110156128675760405162461bcd60e51b815260206004820152601d60248201527f526f757465723a20494e53554646494349454e545f415f414d4f554e5400000060448201526064016104b8565b95508894505b505b50505097509795505050505050565b60008160000361289057506000919050565b6000600161289d84612b3a565b901c6001901b905060018184816128b6576128b6613593565b048201901c905060018184816128ce576128ce613593565b048201901c905060018184816128e6576128e6613593565b048201901c905060018184816128fe576128fe613593565b048201901c9050600181848161291657612916613593565b048201901c9050600181848161292e5761292e613593565b048201901c9050600181848161294657612946613593565b048201901c90506129668182858161296057612960613593565b04612a2f565b9392505050565b60008084116129be5760405162461bcd60e51b815260206004820152601b60248201527f526f757465723a20494e53554646494349454e545f414d4f554e54000000000060448201526064016104b8565b6000831180156129ce5750600082115b612a1a5760405162461bcd60e51b815260206004820152601e60248201527f526f757465723a20494e53554646494349454e545f4c4951554944495459000060448201526064016104b8565b82612a25838661357c565b610ee091906135a9565b6000818310612a3e5781612966565b5090919050565b80156125fa576000836001600160a01b03163b11612a6257600080fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691612abe919061368a565b6000604051808303816000865af19150503d8060008114612afb576040519150601f19603f3d011682016040523d82523d6000602084013e612b00565b606091505b5091509150818015612b2a575080511580612b2a575080806020019051810190612b2a91906133f9565b612b3357600080fd5b5050505050565b600080608083901c15612b4f57608092831c92015b604083901c15612b6157604092831c92015b602083901c15612b7357602092831c92015b601083901c15612b8557601092831c92015b600883901c15612b9757600892831c92015b600483901c15612ba957600492831c92015b600283901c15612bbb57600292831c92015b600183901c156120155760010192915050565b634e487b7160e01b600052600160045260246000fd5b6001600160a01b0381168114612bf957600080fd5b50565b8015158114612bf957600080fd5b600080600080600080600080610100898b031215612c2757600080fd5b8835612c3281612be4565b97506020890135612c4281612be4565b96506040890135612c5281612bfc565b9550606089013594506080890135935060a0890135925060c0890135612c7781612be4565b8092505060e089013590509295985092959890939650565b600080600080600080600060e0888a031215612caa57600080fd5b87359650602088013595506040880135612cc381612be4565b94506060880135612cd381612be4565b93506080880135612ce381612bfc565b925060a0880135612cf381612be4565b8092505060c0880135905092959891949750929550565b6020808252825182820181905260009190848201906040850190845b81811015612d4257835183529284019291840191600101612d26565b50909695505050505050565b60008083601f840112612d6057600080fd5b50813567ffffffffffffffff811115612d7857600080fd5b602083019150836020606083028501011115610fc157600080fd5b60008060008060008060a08789031215612dac57600080fd5b8635955060208701359450604087013567ffffffffffffffff811115612dd157600080fd5b612ddd89828a01612d4e565b9095509350506060870135612df181612be4565b80925050608087013590509295509295509295565b60008060008060808587031215612e1c57600080fd5b8435612e2781612be4565b93506020850135612e3781612be4565b92506040850135612e4781612bfc565b9396929550929360600135925050565b803560ff81168114612e6857600080fd5b919050565b60008060008060008060008060008060006101608c8e031215612e8f57600080fd5b8b35612e9a81612be4565b9a5060208c0135612eaa81612bfc565b995060408c0135985060608c0135975060808c0135965060a08c0135612ecf81612be4565b955060c08c0135945060e08c0135612ee681612bfc565b9350612ef56101008d01612e57565b92506101208c013591506101408c013590509295989b509295989b9093969950565b600080600060608486031215612f2c57600080fd5b8335612f3781612be4565b92506020840135612f4781612be4565b91506040840135612f5781612bfc565b809150509250925092565b60008060408385031215612f7557600080fd5b8235612f8081612be4565b91506020830135612f9081612be4565b809150509250929050565b60008060008060008060008060006101208a8c031215612fba57600080fd5b8935612fc581612be4565b985060208a0135612fd581612be4565b975060408a0135612fe581612bfc565b965060608a0135955060808a0135945060a08a0135935060c08a0135925060e08a013561301181612be4565b809250506101008a013590509295985092959850929598565b60008060006060848603121561303f57600080fd5b83359250602084013561305181612be4565b91506040840135612f5781612be4565b60008060008060006080868803121561307957600080fd5b85359450602086013567ffffffffffffffff81111561309757600080fd5b6130a388828901612d4e565b90955093505060408601356130b781612be4565b949793965091946060013592915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715613107576131076130c8565b604052919050565b60006060828403121561312157600080fd5b6040516060810181811067ffffffffffffffff82111715613144576131446130c8565b604052905080823561315581612be4565b8152602083013561316581612be4565b6020820152604083013561317881612bfc565b6040919091015292915050565b6000806040838503121561319857600080fd5b8235915060208084013567ffffffffffffffff808211156131b857600080fd5b818601915086601f8301126131cc57600080fd5b8135818111156131de576131de6130c8565b6131ec848260051b016130de565b8181528481019250606091820284018501918983111561320b57600080fd5b938501935b82851015613231576132228a8661310f565b84529384019392850192613210565b5080955050505050509250929050565b600080600080600060a0868803121561325957600080fd5b853561326481612be4565b9450602086013561327481612be4565b9350604086013561328481612bfc565b94979396509394606081013594506080013592915050565b6000806000806000806000806000806000806101808d8f0312156132bf57600080fd5b8c356132ca81612be4565b9b5060208d01356132da81612be4565b9a5060408d01356132ea81612bfc565b995060608d0135985060808d0135975060a08d0135965060c08d013561330f81612be4565b955060e08d013594506101008d013561332781612bfc565b93506133366101208e01612e57565b92506101408d013591506101608d013590509295989b509295989b509295989b565b600080600080600080600060e0888a03121561337357600080fd5b873561337e81612be4565b9650602088013561338e81612bfc565b955060408801359450606088013593506080880135925060a0880135612cf381612be4565b6000602082840312156133c557600080fd5b813561296681612be4565b6020808252600f908201526e149bdd5d195c8e8811561412549151608a1b604082015260600190565b60006020828403121561340b57600080fd5b815161296681612bfc565b6000806040838503121561342957600080fd5b505080516020909101519092909150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561201557612015613450565b60208082526022908201527f526f757465723a20494e53554646494349454e545f4f55545055545f414d4f55604082015261139560f21b606082015260800190565b6020808252601490820152730a4deeae8cae47440929cac82989288bea082a8960631b604082015260600190565b6000606082840312156134fb57600080fd5b612966838361310f565b60006020828403121561351757600080fd5b813561296681612bfc565b6001600160a01b039384168152919092166020820152901515604082015260600190565b60006020828403121561355857600080fd5b815161296681612be4565b60006020828403121561357557600080fd5b5051919050565b808202811582820484141761201557612015613450565b634e487b7160e01b600052601260045260246000fd5b6000826135c657634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b60008060006060848603121561362157600080fd5b8351925060208401519150604084015190509250925092565b8082018082111561201557612015613450565b60006001820161365f5761365f613450565b5060010190565b60005b83811015613681578181015183820152602001613669565b50506000910152565b6000825161369c818460208701613666565b9190910192915050565b84815283602082015260018060a01b038316604082015260806060820152600082518060808401526136df8160a0850160208701613666565b601f01601f19169190910160a0019594505050505056fea2646970667358221220496e2b1d9b1170ec871a0e4e487f336c598dd6ceeda48816393ef3ae8791e7fd64736f6c63430008150033";

type RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Router__factory extends ContractFactory {
  constructor(...args: RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pairFactory: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Router> {
    return super.deploy(
      _pairFactory,
      _weth,
      overrides || {}
    ) as Promise<Router>;
  }
  override getDeployTransaction(
    _pairFactory: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pairFactory, _weth, overrides || {});
  }
  override attach(address: string): Router {
    return super.attach(address) as Router;
  }
  override connect(signer: Signer): Router__factory {
    return super.connect(signer) as Router__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterInterface {
    return new utils.Interface(_abi) as RouterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Router {
    return new Contract(address, _abi, signerOrProvider) as Router;
  }
}
