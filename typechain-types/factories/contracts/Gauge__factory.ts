/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Gauge, GaugeInterface } from "../../contracts/Gauge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ve",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_distribution",
        type: "address",
      },
      {
        internalType: "address",
        name: "_internal_bribe",
        type: "address",
      },
      {
        internalType: "address",
        name: "_external_bribe",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isForPair",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimed0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimed1",
        type: "uint256",
      },
    ],
    name: "ClaimFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "DISTRIBUTION",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_VE",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimFees",
    outputs: [
      {
        internalType: "uint256",
        name: "claimed0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "external_bribe",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fees0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fees1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gaugeRewarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "internal_bribe",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isForPair",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewarderPid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_distribution",
        type: "address",
      },
    ],
    name: "setDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gaugeRewarder",
        type: "address",
      },
    ],
    name: "setGaugeRewarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "setRewarderPid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllAndHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d8338038062001d83833981016040819052620000349162000143565b60016000556200004433620000d4565b600280546001600160a01b03199081166001600160a01b03998a16179091556003805482169789169790971790965560048054871695881695909517909455600580548616938716939093179092556007805485169186169190911790556008805490931693169290921790556001805460ff60a01b1916600160a01b92151592909202919091179055620001e0565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200013e57600080fd5b919050565b600080600080600080600060e0888a0312156200015f57600080fd5b6200016a8862000126565b96506200017a6020890162000126565b95506200018a6040890162000126565b94506200019a6060890162000126565b9350620001aa6080890162000126565b9250620001ba60a0890162000126565b915060c08801518015158114620001d057600080fd5b8091505092959891949750929550565b611b9380620001f06000396000f3fe608060405234801561001057600080fd5b50600436106102475760003560e01c806382bfefc81161013b578063c8f33c91116100b8578063e57482131161007c578063e5748213146104a3578063ebe2b12b146104c7578063f2fde38b146104d0578063f7c618c1146104e3578063f97d2114146104f657600080fd5b8063c8f33c9114610464578063cd3daf9d1461046d578063d294f09314610475578063de5f626814610492578063df136d651461049a57600080fd5b80638f67b013116100ff5780638f67b0131461041957806393f1c442146104225780639f6d7d5b1461042b578063b66503cf1461043e578063b6b55f251461045157600080fd5b806382bfefc8146103ba578063853828b6146103cd578063863e2442146103d55780638b876347146103e85780638da5cb5b1461040857600080fd5b80636e9852f2116101c9578063770f85711161018d578063770f8571146103705780637b0a47ee146103835780637c91e4eb1461038c5780637f6990151461039f57806380faa57d146103b257600080fd5b80636e9852f2146103045780636ebcf6071461030c57806370a082311461032c57806370b15e6d14610355578063715018a61461036857600080fd5b80632e1a7d4d116102105780632e1a7d4d146102cd5780633d18b912146102e25780633eaaf86b146102ea5780634c02a21c146102f35780636946a235146102fc57600080fd5b80628cc2621461024c57806303fbf83a146102725780630700037d1461029d5780631407c664146102bd57806318160ddd146102c5575b600080fd5b61025f61025a36600461194b565b610509565b6040519081526020015b60405180910390f35b600854610285906001600160a01b031681565b6040516001600160a01b039091168152602001610269565b61025f6102ab36600461194b565b60116020526000908152604090205481565b600a5461025f565b60125461025f565b6102e06102db366004611968565b610587565b005b6102e0610593565b61025f60125481565b61025f600f5481565b61025f610707565b6102e061071e565b61025f61031a36600461194b565b60136020526000908152604090205481565b61025f61033a36600461194b565b6001600160a01b031660009081526013602052604090205490565b6102e0610363366004611968565b61073f565b6102e0610796565b600754610285906001600160a01b031681565b61025f600b5481565b600554610285906001600160a01b031681565b6102e06103ad36600461194b565b6107a8565b61025f61085e565b600454610285906001600160a01b031681565b6102e061086c565b600654610285906001600160a01b031681565b61025f6103f636600461194b565b60106020526000908152604090205481565b6001546001600160a01b0316610285565b61025f60095481565b61025f600e5481565b600354610285906001600160a01b031681565b6102e061044c366004611981565b610885565b6102e061045f366004611968565b610b10565b61025f600c5481565b61025f610b1a565b61047d610b65565b60408051928352602083019190915201610269565b6102e0610b8a565b61025f600d5481565b6001546104b790600160a01b900460ff1681565b6040519015158152602001610269565b61025f600a5481565b6102e06104de36600461194b565b610c03565b600254610285906001600160a01b031681565b6102e061050436600461194b565b610c79565b6001600160a01b0381166000908152601160209081526040808320546010909252822054610581919061057b90670de0b6b3a7640000906105759061055690610550610b1a565b90610d2f565b6001600160a01b03881660009081526013602052604090205490610d42565b90610d4e565b90610d5a565b92915050565b61059081610d66565b50565b61059b610fbe565b336105a4610b1a565b600d556105af61085e565b600c556001600160a01b038116156105f6576105ca81610509565b6001600160a01b038216600090815260116020908152604080832093909355600d546010909152919020555b33600090815260116020526040902054801561066b5733600081815260116020526040812055600254610635916001600160a01b039091169083611017565b60405181815233907fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba9060200160405180910390a25b6006546001600160a01b0316156106f95760065460095433600081815260136020526040908190205490516344af0fa760e01b81526001600160a01b03909416936344af0fa7936106c69390929091829188916004016119ad565b600060405180830381600087803b1580156106e057600080fd5b505af11580156106f4573d6000803e3d6000fd5b505050505b50506107056001600055565b565b600b5460009061071990610e10610d42565b905090565b3360009081526013602052604090205461073790610d66565b610705610593565b61074761107f565b610755565b60405180910390fd5b60095481036107915760405162461bcd60e51b81526020600482015260086024820152671cd85b59481c1a5960c21b604482015260640161074c565b600955565b61079e61107f565b61070560006110d9565b6107b061107f565b6001600160a01b0381166107f25760405162461bcd60e51b81526020600482015260096024820152683d32b9379030b2323960b91b604482015260640161074c565b6005546001600160a01b039081169082160361083c5760405162461bcd60e51b815260206004820152600960248201526839b0b6b29030b2323960b91b604482015260640161074c565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600061071942600a5461112b565b3360009081526013602052604090205461070590610d66565b61088d610fbe565b6005546001600160a01b031633146108fa5760405162461bcd60e51b815260206004820152602a60248201527f43616c6c6572206973206e6f742052657761726473446973747269627574696f6044820152691b8818dbdb9d1c9858dd60b21b606482015260840161074c565b6000610904610b1a565b600d5561090f61085e565b600c556001600160a01b038116156109565761092a81610509565b6001600160a01b038216600090815260116020908152604080832093909355600d546010909152919020555b6002546001600160a01b0384811691161461097057600080fd5b60055460025461098e916001600160a01b0391821691163085611141565b600a5442106109ab576109a382610e10610d4e565b600b556109ec565b600a546000906109bb9042610d2f565b905060006109d4600b5483610d4290919063ffffffff16565b90506109e6610e106105758684610d5a565b600b5550505b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5991906119dc565b9050610a6781610e10610d4e565b600b541115610ab85760405162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f20686967680000000000000000604482015260640161074c565b42600c819055610aca90610e10610d5a565b600a556040518381527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a15050610b0c6001600055565b5050565b610590813361117f565b6000601254600003610b2d5750600d5490565b610719610b5c601254610575670de0b6b3a7640000610b56600b54610b56600c5461055061085e565b90610d42565b600d5490610d5a565b600080610b70610fbe565b610b78611372565b91509150610b866001600055565b9091565b600480546040516370a0823160e01b81523392810192909252610705916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610bd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfd91906119dc565b3361117f565b610c0b61107f565b6001600160a01b038116610c705760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161074c565b610590816110d9565b610c8161107f565b6001600160a01b038116610cc35760405162461bcd60e51b81526020600482015260096024820152683d32b9379030b2323960b91b604482015260640161074c565b6006546001600160a01b0390811690821603610d0d5760405162461bcd60e51b815260206004820152600960248201526839b0b6b29030b2323960b91b604482015260640161074c565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000610d3b8284611a0b565b9392505050565b6000610d3b8284611a1e565b6000610d3b8284611a35565b6000610d3b8284611a57565b610d6e610fbe565b33610d77610b1a565b600d55610d8261085e565b600c556001600160a01b03811615610dc957610d9d81610509565b6001600160a01b038216600090815260116020908152604080832093909355600d546010909152919020555b60008211610e0d5760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b604482015260640161074c565b601254600090610e1d9084610d2f565b1015610e585760405162461bcd60e51b815260206004820152600a6024820152690737570706c79203c20360b41b604482015260640161074c565b33600090815260136020526040902054610ea25760405162461bcd60e51b815260206004820152600b60248201526a6e6f2062616c616e63657360a81b604482015260640161074c565b601254610eaf9083610d2f565b60125533600090815260136020526040902054610ecc9083610d2f565b336000908152601360205260409020556006546001600160a01b031615610f6757600654600954336000818152601360205260408082205490516344af0fa760e01b81526001600160a01b03909516946344af0fa794610f34949093909283926004016119ad565b600060405180830381600087803b158015610f4e57600080fd5b505af1158015610f62573d6000803e3d6000fd5b505050505b600454610f7e906001600160a01b03163384611017565b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2506105906001600055565b6002600054036110105760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161074c565b6002600055565b6040516001600160a01b03831660248201526044810182905261107a90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526116d1565b505050565b6001546001600160a01b031633146107055760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161074c565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081831061113a5781610d3b565b5090919050565b6040516001600160a01b03808516602483015283166044820152606481018290526111799085906323b872dd60e01b90608401611043565b50505050565b611187610fbe565b80611190610b1a565b600d5561119b61085e565b600c556001600160a01b038116156111e2576111b681610509565b6001600160a01b038216600090815260116020908152604080832093909355600d546010909152919020555b600083116112325760405162461bcd60e51b815260206004820152601e60248201527f6465706f736974284761756765293a2063616e6e6f74207374616b6520300000604482015260640161074c565b6001600160a01b0382166000908152601360205260409020546112559084610d5a565b6001600160a01b03831660009081526013602052604090205560125461127b9084610d5a565b601255600454611296906001600160a01b0316833086611141565b6006546001600160a01b031615611324576006546009546001600160a01b038481166000908152601360205260408082205490516344af0fa760e01b815292909416936344af0fa7936112f1939092889283926004016119ad565b600060405180830381600087803b15801561130b57600080fd5b505af115801561131f573d6000803e3d6000fd5b505050505b816001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c8460405161135f91815260200190565b60405180910390a250610b0c6001600055565b6001546000908190600160a01b900460ff166113915750600091829150565b600480546040805163d294f09360e01b815281516001600160a01b0390931693849363d294f093938383019390929082900301816000875af11580156113db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ff9190611a6a565b90935091508215158061141157508115155b156116cc57600083600e546114269190611a57565b9050600083600f546114389190611a57565b9050600080846001600160a01b0316639d63848a6040518163ffffffff1660e01b81526004016040805180830381865afa15801561147a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149e9190611a8e565b9150915083600014611592576000600e5560075460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529083169063095ea7b3906044016020604051808303816000875af1158015611502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115269190611ac8565b5060075460405163b66503cf60e01b81526001600160a01b038481166004830152602482018790529091169063b66503cf90604401600060405180830381600087803b15801561157557600080fd5b505af1158015611589573d6000803e3d6000fd5b50505050611598565b600e8490555b8215611686576000600f5560075460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529082169063095ea7b3906044016020604051808303816000875af11580156115f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161a9190611ac8565b5060075460405163b66503cf60e01b81526001600160a01b038381166004830152602482018690529091169063b66503cf90604401600060405180830381600087803b15801561166957600080fd5b505af115801561167d573d6000803e3d6000fd5b5050505061168c565b600f8390555b604080518881526020810188905233917fbc567d6cbad26368064baa0ab5a757be46aae4d70f707f9203d9d9b6c8ccbfa3910160405180910390a2505050505b509091565b6000611726826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117a69092919063ffffffff16565b90508051600014806117475750808060200190518101906117479190611ac8565b61107a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161074c565b60606117b584846000856117bd565b949350505050565b60608247101561181e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161074c565b600080866001600160a01b0316858760405161183a9190611b0e565b60006040518083038185875af1925050503d8060008114611877576040519150601f19603f3d011682016040523d82523d6000602084013e61187c565b606091505b509150915061188d87838387611898565b979650505050505050565b60608315611907578251600003611900576001600160a01b0385163b6119005760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161074c565b50816117b5565b6117b5838381511561191c5781518083602001fd5b8060405162461bcd60e51b815260040161074c9190611b2a565b6001600160a01b038116811461059057600080fd5b60006020828403121561195d57600080fd5b8135610d3b81611936565b60006020828403121561197a57600080fd5b5035919050565b6000806040838503121561199457600080fd5b823561199f81611936565b946020939093013593505050565b9485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b6000602082840312156119ee57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610581576105816119f5565b8082028115828204841417610581576105816119f5565b600082611a5257634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610581576105816119f5565b60008060408385031215611a7d57600080fd5b505080516020909101519092909150565b60008060408385031215611aa157600080fd5b8251611aac81611936565b6020840151909250611abd81611936565b809150509250929050565b600060208284031215611ada57600080fd5b81518015158114610d3b57600080fd5b60005b83811015611b05578181015183820152602001611aed565b50506000910152565b60008251611b20818460208701611aea565b9190910192915050565b6020815260008251806020840152611b49816040850160208701611aea565b601f01601f1916919091016040019291505056fea26469706673582212202da1d03fdfef3c012068deafde99e092eff8559a8b3aacb4a6abdbeee7620ea264736f6c63430008150033";

type GaugeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GaugeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gauge__factory extends ContractFactory {
  constructor(...args: GaugeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rewardToken: PromiseOrValue<string>,
    _ve: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _distribution: PromiseOrValue<string>,
    _internal_bribe: PromiseOrValue<string>,
    _external_bribe: PromiseOrValue<string>,
    _isForPair: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Gauge> {
    return super.deploy(
      _rewardToken,
      _ve,
      _token,
      _distribution,
      _internal_bribe,
      _external_bribe,
      _isForPair,
      overrides || {}
    ) as Promise<Gauge>;
  }
  override getDeployTransaction(
    _rewardToken: PromiseOrValue<string>,
    _ve: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _distribution: PromiseOrValue<string>,
    _internal_bribe: PromiseOrValue<string>,
    _external_bribe: PromiseOrValue<string>,
    _isForPair: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardToken,
      _ve,
      _token,
      _distribution,
      _internal_bribe,
      _external_bribe,
      _isForPair,
      overrides || {}
    );
  }
  override attach(address: string): Gauge {
    return super.attach(address) as Gauge;
  }
  override connect(signer: Signer): Gauge__factory {
    return super.connect(signer) as Gauge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GaugeInterface {
    return new utils.Interface(_abi) as GaugeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gauge {
    return new Contract(address, _abi, signerOrProvider) as Gauge;
  }
}
