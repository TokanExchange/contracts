/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Airdrop,
  AirdropInterface,
} from "../../../contracts/airdrop/Airdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ve",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "onBehalf",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "END_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOCK_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "START_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "claimOnBehalf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shutdown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unclaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610f07380380610f0783398101604081905261002f9161009d565b33608052600280546001600160a01b038581166001600160a01b0319928316179092556003805492851692909116919091179055600481905561007581621275006100d9565b60055550610100915050565b80516001600160a01b038116811461009857600080fd5b919050565b6000806000606084860312156100b257600080fd5b6100bb84610081565b92506100c960208501610081565b9150604084015190509250925092565b808201808211156100fa57634e487b7160e01b600052601160045260246000fd5b92915050565b608051610dd761013060003960008181610126015281816101cc0152818161045501526105970152610dd76000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80636466f45e116100715780636466f45e14610105578063669416b8146101185780638da5cb5b14610121578063ca1d209d14610160578063ddaa26ad14610173578063fc0e74d11461017c57600080fd5b80631820cabb146100ae57806337ba682d146100cc578063402914f5146100d55780634ddf47d4146100e85780634e71d92d146100fd575b600080fd5b6100b9630784ce0081565b6040519081526020015b60405180910390f35b6100b960055481565b6100b96100e3366004610b93565b610184565b6100fb6100f6366004610bb7565b6101c1565b005b6100fb61028c565b6100fb610113366004610b93565b61032f565b6100b960065481565b6101487f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c3565b6100fb61016e366004610c29565b61044a565b6100b960045481565b6100fb61058c565b600061018e610743565b156101bc57506001600160a01b0381166000908152602081905260409020546006548111156101bc57506006545b919050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102125760405162461bcd60e51b815260040161020990610c42565b60405180910390fd5b8061021e603482610c72565b156102615760405162461bcd60e51b81526020600482015260136024820152720d2dcecc2d8d2c840c8c2e8c240d8cadccee8d606b1b6044820152606401610209565b60448181015b8082101561028557602082013560601c823555603490910190610267565b5050505050565b600061029733610184565b9050600081116102dc5760405162461bcd60e51b815260206004820152601060248201526f6e6f7468696e6720746f20636c61696d60801b6044820152606401610209565b3360008181526020818152604080832092909255905183815282917ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683910160405180910390a361032c813361075d565b50565b600061033a82610184565b90506000811161037f5760405162461bcd60e51b815260206004820152601060248201526f6e6f7468696e6720746f20636c61696d60801b6044820152606401610209565b6001600160a01b03808316600090815260016020526040902054163381146103d75760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b6044820152606401610209565b6001600160a01b038316600081815260208181526040808320839055600182529182902080546001600160a01b0319169055905184815233917ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683910160405180910390a3610445823361075d565b505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104925760405162461bcd60e51b815260040161020990610c42565b60055442106104dc5760405162461bcd60e51b815260206004820152601660248201527520b4b9323937b8103832b934b7b21034b99037bb32b960511b6044820152606401610209565b6002546104f4906001600160a01b03163330846108b9565b80600660008282546105069190610caa565b909155505060025460035460065460405163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af1158015610564573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105889190610cc3565b5050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105d45760405162461bcd60e51b815260040161020990610c42565b6005544210156106265760405162461bcd60e51b815260206004820152601a60248201527f41697264726f7020706572696f64206973206e6f74206f7665720000000000006044820152606401610209565b600654806106685760405162461bcd60e51b815260206004820152600f60248201526e3737ba3434b733903a3790313ab93760891b6044820152606401610209565b6000600681905560025460035460405163095ea7b360e01b81526001600160a01b0391821660048201526024810193909352169063095ea7b3906044016020604051808303816000875af11580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e89190610cc3565b50600254604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561072f57600080fd5b505af1158015610285573d6000803e3d6000fd5b60006004544210158015610758575060055442105b905090565b816006600082825461076f9190610ce5565b909155505060035460405163d4e54c3b60e01b815260048101849052630784ce0060248201526001600160a01b038381166044830152600092169063d4e54c3b906064016020604051808303816000875af11580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f69190610cf8565b9050801580159061087c57506003546040516331a9108f60e11b8152600481018390526001600160a01b03848116921690636352211e90602401602060405180830381865afa15801561084d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108719190610d11565b6001600160a01b0316145b6104455760405162461bcd60e51b815260206004820152600e60248201526d1b5a5b9d1a5b99c819985a5b195960921b6044820152606401610209565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610913908590610919565b50505050565b600061096e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109ee9092919063ffffffff16565b905080516000148061098f57508080602001905181019061098f9190610cc3565b6104455760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610209565b60606109fd8484600085610a05565b949350505050565b606082471015610a665760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610209565b600080866001600160a01b03168587604051610a829190610d52565b60006040518083038185875af1925050503d8060008114610abf576040519150601f19603f3d011682016040523d82523d6000602084013e610ac4565b606091505b5091509150610ad587838387610ae0565b979650505050505050565b60608315610b4f578251600003610b48576001600160a01b0385163b610b485760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610209565b50816109fd565b6109fd8383815115610b645781518083602001fd5b8060405162461bcd60e51b81526004016102099190610d6e565b6001600160a01b038116811461032c57600080fd5b600060208284031215610ba557600080fd5b8135610bb081610b7e565b9392505050565b60008060208385031215610bca57600080fd5b823567ffffffffffffffff80821115610be257600080fd5b818501915085601f830112610bf657600080fd5b813581811115610c0557600080fd5b866020828501011115610c1757600080fd5b60209290920196919550909350505050565b600060208284031215610c3b57600080fd5b5035919050565b60208082526016908201527531b0b63630b136329037b7363c90313c9037bbb732b960511b604082015260600190565b600082610c8f57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b80820180821115610cbd57610cbd610c94565b92915050565b600060208284031215610cd557600080fd5b81518015158114610bb057600080fd5b81810381811115610cbd57610cbd610c94565b600060208284031215610d0a57600080fd5b5051919050565b600060208284031215610d2357600080fd5b8151610bb081610b7e565b60005b83811015610d49578181015183820152602001610d31565b50506000910152565b60008251610d64818460208701610d2e565b9190910192915050565b6020815260008251806020840152610d8d816040850160208701610d2e565b601f01601f1916919091016040019291505056fea2646970667358221220bba95934e78466672cad8adcf04abd31a2be184f89af21b92447164e0106ece364736f6c63430008150033";

type AirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Airdrop__factory extends ContractFactory {
  constructor(...args: AirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _ve: PromiseOrValue<string>,
    _startTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Airdrop> {
    return super.deploy(
      _token,
      _ve,
      _startTime,
      overrides || {}
    ) as Promise<Airdrop>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _ve: PromiseOrValue<string>,
    _startTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _ve, _startTime, overrides || {});
  }
  override attach(address: string): Airdrop {
    return super.attach(address) as Airdrop;
  }
  override connect(signer: Signer): Airdrop__factory {
    return super.connect(signer) as Airdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropInterface {
    return new utils.Interface(_abi) as AirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Airdrop {
    return new Contract(address, _abi, signerOrProvider) as Airdrop;
  }
}
